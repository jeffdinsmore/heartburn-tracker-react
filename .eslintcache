[{"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\index.js":"1","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reportWebVitals.js":"2","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\firebase.js":"3","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\index.js":"4","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Footer.js":"5","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\form-visible-reducer.js":"6","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\editing-reducer.js":"7","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\foodItem-list-reducer.js":"8","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\ActionTypes.js":"9","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\index.js":"10","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\ButtonCount.js":"11","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Modal.js":"12","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\show-modal-reducer.js":"13","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\select-foodItem-reducer.js":"14","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\homepage-visible-reducer.js":"15","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\sign-in-name-reducer.js":"16","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\login-visible-reducer.js":"17","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Routes.js":"18","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\PasswordReset.js":"19","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\user-id-reducer.js":"20","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\auth\\Signin.js":"21","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\auth\\Signup.js":"22","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\App.js":"23","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\auth\\Signout.js":"24","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\history-reducer.js":"25","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\nav\\Header.js":"26","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\nav\\SignedOutLinks.js":"27","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\nav\\SignedInLinks.js":"28","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditFoodItemForm.js":"29","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItem.js":"30","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemDetail.js":"31","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemList.js":"32","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Homepage.js":"33","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\NewFoodItemForm.js":"34","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\YourStats.js":"35","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditUserForm.js":"36","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\UserAccountInfo.js":"37"},{"size":1682,"mtime":1643244688692,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":783,"mtime":1643241737184,"results":"41","hashOfConfig":"39"},{"size":917,"mtime":1642836263188,"results":"42","hashOfConfig":"39"},{"size":937,"mtime":1642836894384,"results":"43","hashOfConfig":"39"},{"size":252,"mtime":1634000404237,"results":"44","hashOfConfig":"39"},{"size":246,"mtime":1634000304571,"results":"45","hashOfConfig":"39"},{"size":768,"mtime":1641531686543,"results":"46","hashOfConfig":"39"},{"size":752,"mtime":1642116922932,"results":"47","hashOfConfig":"39"},{"size":1860,"mtime":1642837417619,"results":"48","hashOfConfig":"39"},{"size":536,"mtime":1642572736697,"results":"49","hashOfConfig":"39"},{"size":1345,"mtime":1642572780415,"results":"50","hashOfConfig":"39"},{"size":255,"mtime":1634632214566,"results":"51","hashOfConfig":"39"},{"size":823,"mtime":1635455575261,"results":"52","hashOfConfig":"39"},{"size":256,"mtime":1635447714217,"results":"53","hashOfConfig":"39"},{"size":1048,"mtime":1636178791012,"results":"54","hashOfConfig":"39"},{"size":264,"mtime":1635460030853,"results":"55","hashOfConfig":"39"},{"size":1046,"mtime":1642572517481,"results":"56","hashOfConfig":"39"},{"size":829,"mtime":1642836657344,"results":"57","hashOfConfig":"39"},{"size":965,"mtime":1636309432147,"results":"58","hashOfConfig":"39"},{"size":5997,"mtime":1643236917172,"results":"59","hashOfConfig":"39"},{"size":1181,"mtime":1642836367146,"results":"60","hashOfConfig":"39"},{"size":3043,"mtime":1643069128472,"results":"61","hashOfConfig":"39"},{"size":774,"mtime":1640510349625,"results":"62","hashOfConfig":"63"},{"size":316,"mtime":1642117834723,"results":"64","hashOfConfig":"39"},{"size":2558,"mtime":1643069651584,"results":"65","hashOfConfig":"39"},{"size":559,"mtime":1642714004602,"results":"66","hashOfConfig":"39"},{"size":2257,"mtime":1643072526766,"results":"67","hashOfConfig":"39"},{"size":5057,"mtime":1643069531463,"results":"68","hashOfConfig":"39"},{"size":1007,"mtime":1642573117727,"results":"69","hashOfConfig":"39"},{"size":4287,"mtime":1643072045106,"results":"70","hashOfConfig":"39"},{"size":6844,"mtime":1643243581129,"results":"71","hashOfConfig":"39"},{"size":5007,"mtime":1643240703586,"results":"72","hashOfConfig":"39"},{"size":3851,"mtime":1643069616437,"results":"73","hashOfConfig":"39"},{"size":6692,"mtime":1643069631054,"results":"74","hashOfConfig":"39"},{"size":7870,"mtime":1643070902936,"results":"75","hashOfConfig":"39"},{"size":4092,"mtime":1643072305729,"results":"76","hashOfConfig":"39"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1s1guti",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ibhg34",{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"81"},"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\index.js",["160","161","162","163","164","165","166","167"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reportWebVitals.js",[],["168","169"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\firebase.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\index.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Footer.js",["170"],"import React, { useEffect } from 'react';\r\nimport { withFirestore, isLoaded } from 'react-redux-firebase';\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction Footer(props) {\r\n  const auth = props.firebase.auth();\r\n  const email = !window.localStorage.getItem('email') ? 'Not signed in' : window.localStorage.getItem('email');\r\n  const currentUser = useSelector(state => state.loginName.user);\r\n\r\n  useEffect(() => {\r\n    if ((isLoaded(auth)) && (auth.currentUser != null)) {\r\n    }\r\n    console.log(\"component updated!\", currentUser);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"footer\">\r\n        <ul id=\"footerUl\">\r\n          <li id=\"footerLi\">{email}</li>\r\n          <li id=\"footerLi\">Created by: Jeff Dinsmore</li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default withFirestore(Footer);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\form-visible-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\editing-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\foodItem-list-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\ActionTypes.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\index.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\ButtonCount.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Modal.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\show-modal-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\select-foodItem-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\homepage-visible-reducer.js",[],["171","172"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\sign-in-name-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\login-visible-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Routes.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\PasswordReset.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\user-id-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\auth\\Signin.js",["173","174","175"],"import React from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { useHistory } from \"react-router\";\r\nimport PropTypes from 'prop-types';\r\nimport { withFirestore, useFirestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Signin(props) {\r\n  const { firestore } = props;\r\n  // useFirestoreConnect([\r\n  //   { collection: 'users' }\r\n  // ]);\r\n  console.log(props)\r\n  const createAccount = () => {\r\n    history.push('/signup');\r\n  }\r\n  // useEffect(() => {\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     const { dispatch } = props;\r\n  //     //const action = a.signInName();\r\n\r\n  //     if(user) {\r\n  //       console.log(\"fdfd\", user.email)\r\n  //       // if (loginName === \"Signed out\" || loginName === \"Not signed in\") {\r\n  //         dispatch(a.signInName(user.email));\r\n  //         console.log(\"s\", state)\r\n  //       }\r\n  //     // } else {\r\n\r\n  //     //}\r\n  //   })\r\n  // }, [])\r\n\r\n  const history = useHistory();\r\n  //const loginName = useSelector(state => state.loginName.user)\r\n  // const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  //const auth = getAuth();\r\n\r\n\r\n  function doSignIn(event) {\r\n    event.preventDefault();\r\n    let userId;\r\n    const email = event.target.signinEmail.value;\r\n    const password = event.target.signinPassword.value;\r\n\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then((data) => {\r\n      console.log(\"Successfully signed in!\",data.user);\r\n      window.localStorage.setItem('uid', data.user.uid);\r\n      window.localStorage.setItem('email', data.user.email);\r\n      window.localStorage.setItem('firstName', data.user.firstName);\r\n      window.localStorage.setItem('lastName', data.user.lastName);\r\n      window.localStorage.setItem('city', data.user.city);\r\n      window.localStorage.setItem('userState', data.user.userState);\r\n      window.localStorage.setItem('creationTime', data.user.metadata.creationTime);\r\n      window.localStorage.setItem('lastSignInTime', data.user.metadata.lastSignInTime);\r\n\r\n      userId = window.localStorage.getItem('uid')\r\n      // setTimeout(() => {\r\n      //   history.push(\"/\");\r\n      // }, 800);\r\n    }).catch((error) => {\r\n      alert(error.message);\r\n      console.log(error)\r\n    });\r\n\r\n    props.firestore.get({ collection: 'users', doc: userId }).then((user) => {\r\n      console.log('made it here', user)\r\n      const userInfo = {\r\n        city: user.get('city'),\r\n        email: user.get('email'),\r\n        firstName: user.get('firstName'),\r\n        lastName: user.get('lastName'),\r\n        userState: user.get('userState'),\r\n      };\r\n      console.log(\"user\", userInfo)\r\n      window.localStorage.setItem('lastName', userInfo.lastName);\r\n      window.localStorage.setItem('firstName', userInfo.firstName);\r\n      window.localStorage.setItem('city', userInfo.city);\r\n      window.localStorage.setItem('userState', userInfo.userState);\r\n    // }).catch((error) => {\r\n    //   alert(error.message);\r\n    //   console.log(error)\r\n      //     const firestoreFoodItem = {\r\n      //       foodName: foodItem.get(\"foodName\"),\r\n      //       brand: foodItem.get(\"brand\"),\r\n      //       ingredients: foodItem.get(\"ingredients\"),\r\n      //       heartburn: foodItem.get(\"heartburn\"),\r\n      //       timeOpen: foodItem.get(\"timeOpen\"),\r\n      //       id: foodItem.id\r\n      //     }\r\n      //     const path = '/foodItem/' + firestoreFoodItem.id;\r\n      //     dispatch(a.selectFoodItem(firestoreFoodItem))\r\n      //     dispatch(a.history(path))\r\n      //     console.log('aaaaaaaaaa', firestoreFoodItem)\r\n      //     console.log(\"updatedddddddddddddddd\", props)\r\n      //   });\r\n      });\r\n    \r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 800);\r\n    console.log(\"ddddddddddddd\")\r\n  }\r\n\r\n\r\n  // const signInWithGoogle = async () => {\r\n  //   try {\r\n  //     const res = await firebase.auth.signInWithPopup(googleProvider);\r\n  //     const user = res.user;\r\n  //     const query = await firebase.firestore()\r\n  //       .collection(\"users\")\r\n  //       .where(\"uid\", \"==\", user.uid)\r\n  //       .get();\r\n  //     if (query.docs.length === 0) {\r\n  //       await firebase.firestore().collection(\"users\").add({\r\n  //         uid: user.uid,\r\n  //         name: user.displayName,\r\n  //         authProvider: \"google\",\r\n  //         email: user.email,\r\n  //       });\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //     alert(err.message);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Login</h2>\r\n      <br />\r\n      <form onSubmit={doSignIn}>\r\n        <input\r\n          type='text'\r\n          name='signinEmail'\r\n          placeholder='email' />&nbsp;&nbsp;&nbsp;\r\n        <input\r\n          type='password'\r\n          name='signinPassword'\r\n          placeholder='Password' />&nbsp;&nbsp;&nbsp;\r\n        <button className=\"btn btn-sm btn-success\" type='submit'>Login</button>\r\n      </form>\r\n      <br></br>\r\n      <p>Don't have an account?</p>\r\n      <button className=\"btn btn-info btn-sm\" onClick={() => createAccount()}>Sign up</button>\r\n      {/* <button className=\"btn btn-info btn-sm\" onClick={doSignOut}>Logout</button> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSignin.propTypes = {\r\n  onSigningIn: PropTypes.func,\r\n  doSignOut: PropTypes.func,\r\n  masterFoodItemList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool,\r\n  editing: PropTypes.bool,\r\n  selectedFoodItem: PropTypes.object,\r\n  showModal: PropTypes.bool,\r\n  loginName: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    masterFoodItemList: state.masterFoodItemList,\r\n    editing: state.editing,\r\n    selectedFoodItem: state.selectedFoodItem,\r\n    showModal: state.showModal,\r\n    firestore2: state.firestore,\r\n    loginName: !window.localStorage.getItem('email') ? 'Not signed in' : window.localStorage.getItem('email'),\r\n    userId: window.localStorage.getItem('uid'),\r\n  }\r\n}\r\n\r\nSignin = connect(mapStateToProps)(Signin);\r\n\r\nexport default withFirestore(Signin);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\auth\\Signup.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\App.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\auth\\Signout.js",["176","177","178","179","180","181","182","183","184","185","186","187","188"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\history-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\nav\\Header.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\nav\\SignedOutLinks.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\nav\\SignedInLinks.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditFoodItemForm.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItem.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemDetail.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemList.js",["189","190"],"import React, { useEffect, useState } from 'react';\r\nimport FoodItem from \"./FoodItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect, isLoaded, isEmpty, withFirestore } from 'react-redux-firebase';\r\n// import { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport * as a from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction FoodItemList(props) {\r\n  const { userId, dispatch } = props;\r\n  const [uid, setUid] = useState(null);\r\n  const [login, setLogin] = useState(\"Not signed in\");\r\n  const u = window.localStorage.getItem('uid')\r\n  console.log('list', props, u)\r\n  const state = useSelector(state => state);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n          const { dispatch } = props;\r\n          if (user) {\r\n            dispatch(a.signInName(user.email));\r\n            dispatch(a.userId(user.uid));\r\n            window.localStorage.setItem('uid', user.uid);\r\n          }\r\n        })\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n      console.log(\"Home component did mount\")\r\n    })();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      setUid(JSON.parse(window.localStorage.getItem('uid')));\r\n      setLogin(JSON.parse(window.localStorage.getItem('email')));\r\n    } catch(error) {\r\n      console.log(error);\r\n      return undefined;\r\n    }\r\n  }, []);\r\n  \r\n\r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem('uid', uid);\r\n  // }, [uid]);\r\n\r\n  useFirestoreConnect([\r\n    {\r\n      collection: 'users', doc: userId,\r\n      subcollections: [{ collection: 'foodItems', orderBy: [['timeOpen', 'desc']] }], storeAs: 'foodItems'\r\n    }\r\n  ]);\r\n  const foodItems = useSelector(state => state.firestore.ordered.foodItems);\r\n\r\n  const convertDate = (date) => {\r\n    let month = date.toDateString().substring(7, 4);\r\n    let day = date.toDateString().substring(10, 8);\r\n    let year = date.toDateString().substring(15, 11);\r\n    //let n = date.toDateString().substring(15, 3);\r\n    return month + \"-\" + day + \"-\" + year;\r\n  }\r\n  useEffect(() => {\r\n    addMasterFoodList(foodItems);\r\n  }, []);\r\n\r\n  const addMasterFoodList = (list) => {\r\n\r\n    dispatch(a.masterFoodList(list));\r\n  };\r\n\r\n  const handleChangingSelectedFoodItem = (id) => {\r\n    props.firestore.get({ collection: 'users', doc: userId, subcollections: [{ collection: 'foodItems', doc: id }] }).then((foodItem) => {\r\n      const firestoreFoodItem = {\r\n        foodName: foodItem.get(\"foodName\"),\r\n        brand: foodItem.get(\"brand\"),\r\n        ingredients: foodItem.get(\"ingredients\"),\r\n        heartburn: foodItem.get(\"heartburn\"),\r\n        timeOpen: foodItem.get(\"timeOpen\"),\r\n        id: foodItem.id\r\n      }\r\n      const path = '/foodItem/' + firestoreFoodItem.id;\r\n      dispatch(a.selectFoodItem(firestoreFoodItem))\r\n      dispatch(a.history(path))\r\n      console.log('aaaaaaaaaa', firestoreFoodItem)\r\n      console.log(\"updatedddddddddddddddd\", state, props)\r\n    });\r\n  }\r\n\r\n  console.log(\"listy\", props, state, foodItems, typeof u);\r\n  console.log(\"loaded\", isLoaded(foodItems))\r\n\r\n\r\n\r\n  //   if (!isLoaded(foodItems)) {\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //       <h3>Loading...</h3>\r\n  //     </React.Fragment>\r\n  //   )\r\n  // }\r\n\r\n  //else if (isLoaded(foodItems)) {\r\n    console.log('id', uid, userId, login, foodItems, isLoaded(foodItems) && foodItems && foodItems.length === 0)\r\n  if (userId !== null && foodItems !== undefined) {\r\n    let mapFoodItems = foodItems.map((foodItem) => {\r\n      let date = foodItem.timeOpen === null ? new Date() : new Date((foodItem.timeOpen.nanoseconds / 1000000) + (foodItem.timeOpen.seconds * 1000));\r\n      return <FoodItemList\r\n        foodName={foodItem.foodName}\r\n        ingredients={foodItem.ingredients}\r\n        heartburn={foodItem.heartburn}\r\n        timeOpen={date}\r\n        id={foodItem.id}\r\n        key={foodItem.id} />\r\n    })\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <h2>Your Recorded Food List</h2>\r\n        <table className=\"Table-mobile-large\">\r\n          <tbody>\r\n            <tr className=\"tableHeader\">\r\n              <th className=\"headerName\">Food Item</th>\r\n              <th className=\"headerIngredients\">Ingredients</th>\r\n              <th className=\"headerHeartburn\">Heartburn</th>\r\n              <th className=\"headerDate\">Date Opened</th>\r\n              <th className=\"headerDetails\">Details</th>\r\n            </tr>\r\n\r\n            {mapFoodItems.map((foodItem) => {\r\n              return <FoodItem\r\n                whenFoodItemClicked={handleChangingSelectedFoodItem}\r\n                userId={uid}\r\n                foodName={foodItem.props.foodName}\r\n                ingredients={foodItem.props.ingredients}\r\n                heartburn={foodItem.props.heartburn}\r\n                timeOpen={convertDate(foodItem.props.timeOpen)}\r\n                id={foodItem.props.id}\r\n                key={foodItem.props.id} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <hr />\r\n        <Link className='btn btn-info btn-sm' to='/add-food-item'>\r\n          Add Food Item\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  // } else if(isLoaded(foodItems) && foodItems && foodItems.length === 0) {\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //     <h3>Add food items to see them in the list.</h3>\r\n  //     </React.Fragment>\r\n  //   )\r\n  // }\r\n          }  if (isEmpty(foodItems)) {\r\n            return (\r\n              <React.Fragment><span>No food items have been entered in your list.</span>\r\n              </React.Fragment>\r\n            )\r\n          }\r\n  else {\r\n    // if (foodItems === undefined || userId === null) {\r\n      return (\r\n        <React.Fragment>\r\n          <h3>Loading...</h3>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  \r\n\r\n  // if (isEmpty(foodItems)) {\r\n  //   return (\r\n  //     <React.Fragment><span>No food items have been entered in your list.</span>\r\n  //     </React.Fragment>\r\n  //   )\r\n  // }\r\n}\r\n\r\nFoodItemList.propTypes = {\r\n  userId: PropTypes.string,\r\n  firestore2: PropTypes.object,\r\n  loginName: PropTypes.string,\r\n  selectedFoodItem: PropTypes.object,\r\n  editing: PropTypes.bool,\r\n  foodItems: PropTypes.array,\r\n  masterFoodList: PropTypes.object,\r\n  history: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: window.localStorage.getItem('uid'),\r\n  firestore2: state.firestore,\r\n  loginName: window.localStorage.getItem('email'),\r\n  selectedFoodItem: state.selectedFoodItem,\r\n  editing: state.editing,\r\n  foodItems: state.firestore.ordered.foodItems,\r\n  masterFoodList: state.masterFoodItemList,\r\n  //history: state.history,\r\n});\r\n\r\n//FoodItemList = connect(mapStateToProps)(FoodItemList);\r\n\r\nexport default withFirestore(connect(mapStateToProps)(FoodItemList));\r\n","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Homepage.js",["191","192","193"],"import React, { useEffect } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport * as a from '../actions';\r\nimport firebase from 'firebase';\r\nimport { withFirestore, useFirestoreConnect } from 'react-redux-firebase';\r\n\r\nfunction Homepage(props) {\r\n  const { loginName } = props;\r\n  // const user = firebase.auth().currentUser;\r\n  // console.log('userAccount', user, user.metadata.creationTime, user.metadata.lastSignInTime);\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n          const { dispatch } = props;\r\n          if (user) {\r\n            dispatch(a.signInName(user.email));\r\n            dispatch(a.userId(user.uid));\r\n            console.log(\"user\", user)\r\n          }\r\n        })\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n      console.log(\"Home component did mount\")\r\n    })();\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     try {\r\n  //       props.firestore.get({ collection: 'users', doc: window.localStorage.getItem('uid') }).then((user) => {\r\n  //         console.log('made it here', user)\r\n  //         const userInfo = {\r\n  //           city: user.get('city'),\r\n  //           email: user.get('email'),\r\n  //           firstName: user.get('firstName'),\r\n  //           lastName: user.get('lastName'),\r\n  //           userState: user.get('userState'),\r\n  //         };\r\n  //         console.log(\"user\", userInfo)\r\n  //         window.localStorage.setItem('lastName', userInfo.lastName);\r\n  //         window.localStorage.setItem('firstName', userInfo.firstName);\r\n  //         window.localStorage.setItem('city', userInfo.city);\r\n  //         window.localStorage.setItem('userState', userInfo.userState);\r\n  //       }).catch((error) => {\r\n  //         alert(error.message);\r\n  //         console.log(error)\r\n  //       })\r\n  //     } catch (error) {\r\n  //       alert(error)\r\n  //     }\r\n  //   })();\r\n  //   }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //   if(!window.localStorage.getItem('uid') || window.localStorage.getItem('uid') === null) {\r\n    //     window.localStorage.setItem('uid', userId);\r\n    //   } else if(userId === null) {\r\n    //     window.localStorage.setItem('uid', userId);\r\n    //   }\r\n\r\n\r\n    // }, [userId]);\r\n\r\n    // useEffect(() => {\r\n    //   if(!window.localStorage.getItem('email') || window.localStorage.getItem('email') === 'Not signed in') {\r\n    //     window.localStorage.setItem('email', loginName);\r\n    //   }\r\n\r\n    // }, [loginName]);\r\n\r\n    console.log(\"home\", props)\r\n    return (\r\n      <React.Fragment>\r\n        <br />\r\n        <h2><strong>What if heartburn is caused by a specific ingredient or group of ingredients?</strong></h2>\r\n        <blockquote>\r\n          I had heartburn from a chocolate chip cookie made by a specific company, but when I had a chocolate chip cookie made by a different company, I did not get heartburn.<br /><br />\r\n          -- Jeff Dinsmore, Owner\r\n        </blockquote>\r\n        <p>It is our opinion that heartburn may be caused by a specific ingredient or group of ingredients rather than a type of food a person eats.</p>\r\n        {/* <h3><strong>Reducing heartburn starts with what you eat and what drink!</strong></h3>\r\n      <br /> */}\r\n        <br />\r\n        <h3>How do people have heartburn?</h3>\r\n        <p>Heartburn occurs when the lower esophageal sphincter relaxes and allows stomach fluids (stomach acid and food) back up into the esophagus.</p>\r\n        <br />\r\n        <h3>What triggers heartburn?</h3>\r\n        <p>Many doctors believe there are several foods that are listed to be risk factors in causing heartburn.</p>\r\n        <p>Some of these include:</p>\r\n        <ul>\r\n          <li className=\"list\">Spicy foods</li>\r\n          <li className=\"list\">Citrus foods</li>\r\n          <li className=\"list\">Onions</li>\r\n          <li className=\"list\">Tomatoes and tomato products</li>\r\n          <li className=\"list\">Fried foods</li>\r\n          <li className=\"list\">Alcohol</li>\r\n          <li className=\"list\">Coffee and some teas</li>\r\n          <li className=\"list\">Peppermint</li>\r\n        </ul>\r\n        <br />\r\n\r\n        <Link className='btn btn-info btn-sm' style={{ display: loginName !== \"Not signed in\" ? 'inline-block' : \"none\" }} to='/foodlist'>\r\n          See Food List\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\nHomepage.propTypes = {\r\n      userId: PropTypes.string,\r\n      firestore: PropTypes.object,\r\n      loginName: PropTypes.string,\r\n      selectedFoodItem: PropTypes.object,\r\n      editing: PropTypes.bool\r\n    };\r\n\r\n  const mapStateToProps = (state) => ({\r\n    userId: state.userId.userId,\r\n    firestore: state.firestore,\r\n    loginName: state.loginName.user,\r\n    selectedFoodItem: state.selectedFoodItem,\r\n    editing: state.editing,\r\n    firestore2: state.firestore,\r\n  });\r\n\r\n  Homepage = connect(mapStateToProps)(Homepage);\r\n\r\n  export default withFirestore(Homepage);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\NewFoodItemForm.js",["194"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFirestore } from 'react-redux-firebase'\r\nimport firebase from 'firebase';\r\nimport * as a from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction NewFoodItemForm(props) {\r\n  const firestore = useFirestore();\r\n  const history = useHistory();\r\n  const { userId, selectedFoodItem, editing, dispatch } = props;\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n          const { dispatch } = props;\r\n          if (user) {\r\n            dispatch(a.signInName(user.email));\r\n            dispatch(a.userId(user.uid));\r\n          }\r\n        })\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n      console.log(\"Home component did mount\")\r\n    })();\r\n  }, [])\r\n\r\n  const handleAddingNewFoodItemToList = () => {\r\n    const { dispatch } = props;\r\n    const action = a.toggleForm();\r\n    dispatch(action);\r\n    history.goBack();\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (editing) {\r\n      dispatch(a.editing())\r\n      history.push('/foodlist')\r\n    } else if (selectedFoodItem !== null) {\r\n      dispatch(a.unSelectFoodItem());\r\n      history.push('/foodlist')\r\n    } else {\r\n      history.goBack();\r\n    }\r\n\r\n  }\r\n\r\n  function addFoodItemToFirestore(event) {\r\n    event.preventDefault();\r\n    handleAddingNewFoodItemToList();\r\n    //let timestamp = {seconds: 1640835181, nanoseconds: 19000000}\r\n    return firestore.collection('users').doc(userId).collection('foodItems').add(\r\n      Object.assign({}, {\r\n        foodName: event.target.foodName.value,\r\n        brand: event.target.brand.value,\r\n        ingredients: event.target.ingredients.value,\r\n        heartburn: event.target.heartburn.value,\r\n        //timeOpen: timestamp\r\n        timeOpen: firestore.FieldValue.serverTimestamp()\r\n      })\r\n\r\n    );\r\n  }\r\n  console.log(\"newfood item\", props)\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Add A Food Item To Your Tracker</h2>\r\n      <br />\r\n      <form onSubmit={addFoodItemToFirestore}>\r\n        <p className=\"pTagForm\">Food Name:</p>\r\n        <input className=\"field\"\r\n          type='text'\r\n          name='foodName'\r\n          placeholder='Food name'\r\n          required='required' />\r\n        <p className=\"pTagForm\">Brand:</p>\r\n        <input className=\"field\"\r\n          type='text'\r\n          name='brand'\r\n          placeholder='Name brand'\r\n          required='required' />\r\n        <p className=\"pTagForm\">Ingredients:</p>\r\n        <textarea className=\"field2\"\r\n          type='text'\r\n          name='ingredients'\r\n          placeholder='Separate ingredients with commas'\r\n          required='required' />\r\n        <p className=\"pTagForm\">Heartburn:</p>\r\n        <select name=\"heartburn\" id=\"heartburnInput\" required='required' defaultValue=\"\">\r\n          <option value=\"\" disabled>Please Select</option>\r\n          <option value=\"Yes\">Yes</option>\r\n          <option value=\"No\">No</option>\r\n        </select>\r\n        <br></br><br></br><br></br>\r\n        <button className=\"btn btn-success btn-sm\" type='submit'>Submit</button>\r\n      </form>\r\n      <br></br>\r\n      <button className='btn btn-secondary btn-sm' onClick={() => handleClick()} >\r\n        Cancel\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNewFoodItemForm.propTypes = {\r\n  userId: PropTypes.string,\r\n  firestore: PropTypes.object,\r\n  loginName: PropTypes.string,\r\n  selectedFoodItem: PropTypes.object,\r\n  editing: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: window.localStorage.getItem('uid'),\r\n  firestore: state.firestore,\r\n  loginName: window.localStorage.getItem('email'),\r\n  selectedFoodItem: state.selectedFoodItem,\r\n  editing: state.editing,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewFoodItemForm);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\YourStats.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditUserForm.js",["195"],"import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as a from '../actions';\r\nimport { useFirestore } from 'react-redux-firebase';\r\n// import { useStore } from \"react-redux\";\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nfunction EditUserForm(props) {\r\n  const firestore = useFirestore();\r\n  const history = useHistory();\r\n  const { foodItem, userId, loginName, userCity, userState, userFirstName, userLastName } = props;\r\n  console.log('edit', props)\r\n\r\n  const handleEditingUser = () => {\r\n    const { dispatch } = props;\r\n    const action = a.editing();\r\n    const action2 = a.unSelectFoodItem();\r\n    dispatch(action);\r\n    dispatch(action2);\r\n  }\r\n\r\n  // const handleClick = () => {\r\n  //   if (editing) {\r\n  //     dispatch(a.editing())\r\n  //     history.push('/foodlist')\r\n  //   } else if (selectedFoodItem !== null) {\r\n  //     dispatch(a.unSelectFoodItem());\r\n  //     history.push('/foodlist')\r\n  //   } else {\r\n  //     history.goBack();\r\n  //   }\r\n  // }\r\n\r\n  // const handleChangingSelectedFoodItem = (id) => {\r\n  //   props.firestore.get({ collection: 'users', doc: userId, subcollections: [{ collection: 'foodItems', doc: id }] }).then((foodItem) => {\r\n  //     const firestoreFoodItem = {\r\n  //       foodName: foodItem.get(\"foodName\"),\r\n  //       brand: foodItem.get(\"brand\"),\r\n  //       ingredients: foodItem.get(\"ingredients\"),\r\n  //       heartburn: foodItem.get(\"heartburn\"),\r\n  //       timeOpen: foodItem.get(\"timeOpen\"),\r\n  //       id: foodItem.id\r\n  //     }\r\n  //     const path = '/foodItem/' + firestoreFoodItem.id;\r\n  //     dispatch(a.selectFoodItem(firestoreFoodItem))\r\n  //     dispatch(a.history(path))\r\n  //     console.log('aaaaaaaaaa', firestoreFoodItem)\r\n  //     console.log(\"updatedddddddddddddddd\", props)\r\n  //   });\r\n  // }\r\n\r\n  function handleEditUserFormSubmission(event) {\r\n    event.preventDefault();\r\n    handleEditingUser();\r\n    console.log(\"haaaaaaaaaapppppppy\")\r\n    const propertiesToUpdate = {\r\n      firstName: event.target.firstName.value,\r\n      lastName: event.target.lastName.value,\r\n      email: event.target.email.value,\r\n      city: event.target.city.value,\r\n      userState: event.target.userState.value\r\n    }\r\n    console.log(\"userEdit\", propertiesToUpdate)\r\n    history.push('/foodlist')\r\n    window.localStorage.setItem('firstName', propertiesToUpdate.firstName)\r\n    window.localStorage.setItem('lastName', propertiesToUpdate.lastName)\r\n    window.localStorage.setItem('userState', propertiesToUpdate.userState)\r\n    window.localStorage.setItem('city', propertiesToUpdate.city)\r\n    return firestore.update({ collection: 'users', doc: userId }, propertiesToUpdate)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Edit Your Account Info</h2>\r\n      <br />\r\n      <form onSubmit={handleEditUserFormSubmission}>\r\n        <p className=\"pTagForm\">First Name:</p>\r\n        <input className=\"field\"\r\n          type='text'\r\n          name='firstName'\r\n          placeholder='Your first name'\r\n          defaultValue={userFirstName !== null ? userFirstName : \"loading\"}\r\n          required='required' />\r\n        <p className=\"pTagForm\">Last Name:</p>\r\n        <input className=\"field\"\r\n          type='text'\r\n          name='lastName'\r\n          placeholder='Your last name'\r\n          defaultValue={userLastName !== null ? userLastName : \"loading\"}\r\n          required='required' />\r\n        <p className=\"pTagForm\">Email:</p>\r\n        <input className=\"field\"\r\n          type='text'\r\n          name='email'\r\n          placeholder='Your email'\r\n          defaultValue={loginName !== null ? loginName : \"loading\"}\r\n          required='required' />\r\n        <p className=\"pTagForm\">City:</p>\r\n        <input className=\"field\"\r\n          type='text'\r\n          name='city'\r\n          placeholder='Your city'\r\n          defaultValue={userCity !== null ? userCity : \"loading\"}\r\n          required='required' />\r\n        <p className=\"pTagForm\">State:</p>\r\n        <select name=\"userState\" className=\"field\" id=\"heartburnInput\" defaultValue={userState !== undefined ? userState : \"AK\"}>\r\n          <option value=\"\" disabled>Please Select</option>\r\n          <option value=\"AK\">AK</option>\r\n          <option value=\"AL\">AL</option>\r\n          <option value=\"AR\">AR</option>\r\n          <option value=\"AZ\">AZ</option>\r\n          <option value=\"CA\">CA</option>\r\n          <option value=\"CO\">CO</option>\r\n          <option value=\"CT\">CT</option>\r\n          <option value=\"DE\">DE</option>\r\n          <option value=\"FL\">FL</option>\r\n          <option value=\"GA\">GA</option>\r\n          <option value=\"HI\">HI</option>\r\n          <option value=\"IA\">IA</option>\r\n          <option value=\"ID\">ID</option>\r\n          <option value=\"IL\">IL</option>\r\n          <option value=\"IN\">IN</option>\r\n          <option value=\"KS\">KS</option>\r\n          <option value=\"KY\">KY</option>\r\n          <option value=\"LA\">LA</option>\r\n          <option value=\"MA\">MA</option>\r\n          <option value=\"MD\">MD</option>\r\n          <option value=\"ME\">ME</option>\r\n          <option value=\"MI\">MI</option>\r\n          <option value=\"MN\">MN</option>\r\n          <option value=\"MO\">MO</option>\r\n          <option value=\"MS\">MS</option>\r\n          <option value=\"MT\">MT</option>\r\n          <option value=\"NC\">NC</option>\r\n          <option value=\"ND\">ND</option>\r\n          <option value=\"NE\">NE</option>\r\n          <option value=\"NH\">NH</option>\r\n          <option value=\"NJ\">NJ</option>\r\n          <option value=\"NM\">NM</option>\r\n          <option value=\"NV\">NV</option>\r\n          <option value=\"NY\">NY</option>\r\n          <option value=\"OH\">OH</option>\r\n          <option value=\"OK\">OK</option>\r\n          <option value=\"OR\">OR</option>\r\n          <option value=\"PA\">PA</option>\r\n          <option value=\"RI\">RI</option>\r\n          <option value=\"SC\">SC</option>\r\n          <option value=\"SD\">SD</option>\r\n          <option value=\"TN\">TN</option>\r\n          <option value=\"TX\">TX</option>\r\n          <option value=\"UT\">UT</option>\r\n          <option value=\"VA\">VA</option>\r\n          <option value=\"VT\">VT</option>\r\n          <option value=\"WA\">WA</option>\r\n          <option value=\"WI\">WI</option>\r\n          <option value=\"WV\">WV</option>\r\n          <option value=\"WY\">WY</option>\r\n        </select>\r\n        <br></br><br></br>\r\n        <button className=\"btn btn-success btn-sm\" type='submit'>Submit</button>\r\n      </form>\r\n      <br></br>\r\n      {/* <button className='btn btn-secondary btn-sm' onClick={() => handleClick()} >\r\n        Cancel\r\n      </button> */}\r\n\r\n      <Link className=\"btn btn-sm btn-secondary\" to='/'>Cancel</Link>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nEditUserForm.propTypes = {\r\n  foodItem: PropTypes.object,\r\n  onClickingDelete: PropTypes.func,\r\n  onClickingEdit: PropTypes.func,\r\n  onClickingModal: PropTypes.func,\r\n  onClickingCancel: PropTypes.func,\r\n  userId: PropTypes.string,\r\n  firestore2: PropTypes.object,\r\n  loginName: PropTypes.string,\r\n  selectedFoodItem: PropTypes.object,\r\n  editing: PropTypes.bool,\r\n  foodItems: PropTypes.array,\r\n  masterFoodList: PropTypes.object,\r\n  showModal: PropTypes.bool,\r\n  masterFoodItemList: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: window.localStorage.getItem('uid'),\r\n  firestore2: state.firestore,\r\n  loginName: window.localStorage.getItem('email'),\r\n  userFirstName: window.localStorage.getItem('firstName'),\r\n  userLastName: window.localStorage.getItem('lastName'),\r\n  userCity: window.localStorage.getItem('city'),\r\n  userState: window.localStorage.getItem('state'),\r\n  selectedFoodItem: state.selectedFoodItem,\r\n  editing: state.editing,\r\n  foodItems: state.firestore.ordered.foodItems,\r\n  masterFoodList: state.masterFoodItemList,\r\n  foodItem: state.selectedFoodItem,\r\n  showModal: state.showModal,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(EditUserForm);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\UserAccountInfo.js",["196","197","198","199","200"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from './Modal';\r\nimport { useSelector } from \"react-redux\";\r\nimport * as a from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { withFirestore } from 'react-redux-firebase';\r\nimport firebase from 'firebase';\r\n\r\nfunction UserAccountInfo(props) {\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     try {\r\n  //       firebase.auth().onAuthStateChanged((user) => {\r\n  //         const { dispatch } = props;\r\n  //         if (user) {\r\n  //           // dispatch(a.signInName(user.email));\r\n  //           // dispatch(a.userId(user.uid));\r\n  //           console.log(user)\r\n  //           window.localStorage.setItem('uid', user.uid);\r\n  //           window.localStorage.setItem('creationTime', user.metadata.creationTime)\r\n  //           window.localStorage.setItem('lastSignInTime', user.metadata.lastSignInTime)\r\n  //           // window.localStorage.setItem('')\r\n  //         }\r\n  //       })\r\n  //     } catch (error) {\r\n  //       alert(error);\r\n  //     }\r\n  //     console.log(\"Home component did mount\")\r\n  //   })();\r\n  // }, [])\r\n\r\n  //console.log('userAccount', user);\r\n  const history = useHistory();\r\n  const state = useSelector(state => state)\r\n  console.log('detail', state, props)\r\n  const { lastName, firstName, lastSignInTime, creationTime,userState, city, email, uid } = props;\r\n\r\n  const convertDate = (date) => {\r\n    console.log(new Date(date))\r\n    date = new Date(date);\r\n    let today = new Date();\r\n    let time = today - date;\r\n    let month = date.toDateString().substring(7, 4);\r\n    let day = date.toDateString().substring(10, 8);\r\n    let year = date.toDateString().substring(15, 11);\r\n    //let n = date.toDateString().substring(15, 3);\r\n    return month + \"-\" + day + \"-\" + year;\r\n    //return time;\r\n  }\r\n\r\n  const handleEditClick = () => {\r\n    console.log(\"handleEditClick reached!\");\r\n    // const { dispatch } = props;\r\n    // console.log(\"handleEdit\", state, props, foodItem)\r\n    // const action = a.editing();\r\n    // dispatch(action);\r\n\r\n    history.push('/edit-your-account')\r\n  }\r\n\r\n  //console.log(\"Detail component did mount\");\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <h2>Your Account Details</h2>\r\n      <br></br>\r\n      <div className=\"detail\">\r\n        <p><strong>Name:</strong> {firstName && lastName ? firstName + \" \" + lastName : \"loading\"}</p>\r\n\r\n        <p><strong>Email:</strong> {email ? email : \"loading\"}</p>\r\n\r\n        <p><strong>City/State:</strong> {city && userState ? city + ', ' + userState : \"loading\"}</p>\r\n        \r\n        <p><strong>Last Sign in:</strong> {lastSignInTime ? convertDate(lastSignInTime) : \"loading\"}</p>\r\n\r\n        <p><strong>Account Created:</strong> {creationTime ? convertDate(creationTime) : 'loading'}</p>\r\n        <br></br>\r\n        <Link className=\"btn btn-success btn-sm\" onClick={() => handleEditClick(uid)} to=\"/edit-your-account\">Update Account</Link>&nbsp;&nbsp;\r\n      </div>\r\n      <hr />\r\n      <Link as={Link} className='btn btn-info btn-sm' to='/foodlist'>\r\n        See Food List\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nUserAccountInfo.propTypes = {\r\n  userId: PropTypes.string,\r\n  email: PropTypes.string,\r\n  firstName: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  city: PropTypes.string,\r\n  userState: PropTypes.string,\r\n  creationTime: PropTypes.string,\r\n  lastSignInTime: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: window.localStorage.getItem('uid'),\r\n  email: window.localStorage.getItem('email'),\r\n  firstName: window.localStorage.getItem('firstName'),\r\n  lastName: window.localStorage.getItem('lastName'),\r\n  city: window.localStorage.getItem('city'),\r\n  userState: window.localStorage.getItem('userState'),\r\n  creationTime: localStorage.getItem('creationTime'),\r\n  lastSignInTime: localStorage.getItem('lastSignInTime'),\r\n});\r\n\r\n//UserAccountInfo = connect(mapStateToProps)(UserAccountInfo);\r\n\r\nexport default withFirestore(connect(mapStateToProps)(UserAccountInfo));\r\n",{"ruleId":"201","severity":1,"message":"202","line":6,"column":23,"nodeType":"203","messageId":"204","endLine":6,"endColumn":38},{"ruleId":"201","severity":1,"message":"205","line":6,"column":40,"nodeType":"203","messageId":"204","endLine":6,"endColumn":47},{"ruleId":"201","severity":1,"message":"206","line":9,"column":38,"nodeType":"203","messageId":"204","endLine":9,"endColumn":49},{"ruleId":"201","severity":1,"message":"207","line":9,"column":51,"nodeType":"203","messageId":"204","endLine":9,"endColumn":69},{"ruleId":"201","severity":1,"message":"208","line":10,"column":35,"nodeType":"203","messageId":"204","endLine":10,"endColumn":49},{"ruleId":"201","severity":1,"message":"209","line":10,"column":51,"nodeType":"203","messageId":"204","endLine":10,"endColumn":63},{"ruleId":"201","severity":1,"message":"210","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":22},{"ruleId":"201","severity":1,"message":"211","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":13},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":16,"column":6,"nodeType":"218","endLine":16,"endColumn":8,"suggestions":"219"},{"ruleId":"212","replacedBy":"220"},{"ruleId":"214","replacedBy":"221"},{"ruleId":"201","severity":1,"message":"222","line":5,"column":25,"nodeType":"203","messageId":"204","endLine":5,"endColumn":44},{"ruleId":"201","severity":1,"message":"223","line":9,"column":11,"nodeType":"203","messageId":"204","endLine":9,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":174,"column":1,"nodeType":"203","messageId":"226","endLine":174,"endColumn":7},{"ruleId":"201","severity":1,"message":"227","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"228","line":2,"column":20,"nodeType":"203","messageId":"204","endLine":2,"endColumn":24},{"ruleId":"201","severity":1,"message":"229","line":2,"column":26,"nodeType":"203","messageId":"204","endLine":2,"endColumn":52},{"ruleId":"201","severity":1,"message":"230","line":2,"column":54,"nodeType":"203","messageId":"204","endLine":2,"endColumn":70},{"ruleId":"201","severity":1,"message":"231","line":2,"column":72,"nodeType":"203","messageId":"204","endLine":2,"endColumn":90},{"ruleId":"201","severity":1,"message":"232","line":3,"column":20,"nodeType":"203","messageId":"204","endLine":3,"endColumn":25},{"ruleId":"201","severity":1,"message":"233","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":37},{"ruleId":"201","severity":1,"message":"234","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"235","line":5,"column":13,"nodeType":"203","messageId":"204","endLine":5,"endColumn":14},{"ruleId":"201","severity":1,"message":"236","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":21},{"ruleId":"201","severity":1,"message":"222","line":7,"column":25,"nodeType":"203","messageId":"204","endLine":7,"endColumn":44},{"ruleId":"201","severity":1,"message":"237","line":7,"column":46,"nodeType":"203","messageId":"204","endLine":7,"endColumn":54},{"ruleId":"201","severity":1,"message":"238","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":30},{"ruleId":"216","severity":1,"message":"239","line":37,"column":6,"nodeType":"218","endLine":37,"endColumn":8,"suggestions":"240"},{"ruleId":"216","severity":1,"message":"241","line":71,"column":6,"nodeType":"218","endLine":71,"endColumn":8,"suggestions":"242"},{"ruleId":"201","severity":1,"message":"222","line":7,"column":25,"nodeType":"203","messageId":"204","endLine":7,"endColumn":44},{"ruleId":"216","severity":1,"message":"239","line":29,"column":6,"nodeType":"218","endLine":29,"endColumn":8,"suggestions":"243"},{"ruleId":"224","severity":1,"message":"244","line":131,"column":3,"nodeType":"203","messageId":"226","endLine":131,"endColumn":11},{"ruleId":"216","severity":1,"message":"239","line":29,"column":6,"nodeType":"218","endLine":29,"endColumn":8,"suggestions":"245"},{"ruleId":"201","severity":1,"message":"246","line":12,"column":11,"nodeType":"203","messageId":"204","endLine":12,"endColumn":19},{"ruleId":"201","severity":1,"message":"227","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"247","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":13},{"ruleId":"201","severity":1,"message":"235","line":5,"column":13,"nodeType":"203","messageId":"204","endLine":5,"endColumn":14},{"ruleId":"201","severity":1,"message":"248","line":9,"column":8,"nodeType":"203","messageId":"204","endLine":9,"endColumn":16},{"ruleId":"201","severity":1,"message":"249","line":45,"column":9,"nodeType":"203","messageId":"204","endLine":45,"endColumn":13},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'getFirebase' is defined but never used.","'reactReduxFirebase' is defined but never used.","'reduxFirestore' is defined but never used.","'getFirestore' is defined but never used.","'firebaseConfig' is defined but never used.","'thunk' is defined but never used.","no-native-reassign",["250"],"no-negated-in-lhs",["251"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth' and 'currentUser'. Either include them or remove the dependency array.","ArrayExpression",["252"],["250"],["251"],"'useFirestoreConnect' is defined but never used.","'firestore' is assigned a value but never used.","no-func-assign","'Signin' is a function.","isAFunction","'useEffect' is defined but never used.","'auth' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'signInWithGoogle' is defined but never used.","'GoogleAuthProvider' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'PropTypes' is defined but never used.","'a' is defined but never used.","'useSelector' is defined but never used.","'isLoaded' is defined but never used.","'createBrowserHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'addMasterFoodList' and 'foodItems'. Either include them or remove the dependency array.",["254"],["255"],"'Homepage' is a function.",["256"],"'foodItem' is assigned a value but never used.","'Modal' is defined but never used.","'firebase' is defined but never used.","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"259","fix":"263"},{"desc":"259","fix":"264"},"Update the dependencies array to be: [auth, currentUser]",{"range":"265","text":"266"},"Update the dependencies array to be: [props]",{"range":"267","text":"268"},"Update the dependencies array to be: [addMasterFoodList, foodItems]",{"range":"269","text":"270"},{"range":"271","text":"268"},{"range":"272","text":"268"},[585,587],"[auth, currentUser]",[1242,1244],"[props]",[2236,2238],"[addMasterFoodList, foodItems]",[961,963],[873,875]]