[{"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\index.js":"1","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reportWebVitals.js":"2","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\firebase.js":"3","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\App.js":"4","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\index.js":"5","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemControl.js":"6","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Header.js":"7","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signin.js":"8","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\YourStats.js":"9","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signup.js":"10","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Footer.js":"11","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\form-visible-reducer.js":"12","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\editing-reducer.js":"13","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\foodItem-list-reducer.js":"14","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Homepage.js":"15","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\NewFoodItemForm.js":"16","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemList.js":"17","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditFoodItemForm.js":"18","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemDetail.js":"19","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\ActionTypes.js":"20","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\index.js":"21","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItem.js":"22"},{"size":1256,"mtime":1608314105237,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":624,"mtime":1608229546155,"results":"26","hashOfConfig":"24"},{"size":1387,"mtime":1609445218054,"results":"27","hashOfConfig":"24"},{"size":482,"mtime":1608742903962,"results":"28","hashOfConfig":"24"},{"size":4554,"mtime":1610611499297,"results":"29","hashOfConfig":"24"},{"size":1396,"mtime":1609445139466,"results":"30","hashOfConfig":"24"},{"size":1313,"mtime":1608766460539,"results":"31","hashOfConfig":"24"},{"size":3434,"mtime":1609746140168,"results":"32","hashOfConfig":"24"},{"size":955,"mtime":1608766446538,"results":"33","hashOfConfig":"24"},{"size":340,"mtime":1608677038725,"results":"34","hashOfConfig":"24"},{"size":202,"mtime":1608155389060,"results":"35","hashOfConfig":"24"},{"size":204,"mtime":1608309798737,"results":"36","hashOfConfig":"24"},{"size":612,"mtime":1608336260222,"results":"37","hashOfConfig":"24"},{"size":6336,"mtime":1609975905906,"results":"38","hashOfConfig":"24"},{"size":1985,"mtime":1608750099882,"results":"39","hashOfConfig":"24"},{"size":2533,"mtime":1610612883086,"results":"40","hashOfConfig":"24"},{"size":2219,"mtime":1608766371179,"results":"41","hashOfConfig":"24"},{"size":1476,"mtime":1610612915076,"results":"42","hashOfConfig":"24"},{"size":470,"mtime":1608587080817,"results":"43","hashOfConfig":"24"},{"size":1146,"mtime":1608587077494,"results":"44","hashOfConfig":"24"},{"size":909,"mtime":1610611528006,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"fmdhh2",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\index.js",[],["98","99"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reportWebVitals.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\firebase.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\App.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\index.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemControl.js",["100"],"import React from 'react';\r\nimport NewFoodItemForm from './NewFoodItemForm';\r\nimport FoodItemList from './FoodItemList';\r\nimport FoodItemDetail from './FoodItemDetail';\r\nimport EditFoodItemForm from './EditFoodItemForm';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as a from './../actions';\r\nimport { withFirestore, isLoaded } from 'react-redux-firebase';\r\n\r\nclass FoodItemControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFoodItem: null,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"component updated!\");\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { dispatch } = this.props;\r\n    const action = a.toggleForm();\r\n    const action2 = a.editing();\r\n\r\n    if (this.state.selectedFoodItem != null) {\r\n      if (this.props.editing) {\r\n        dispatch(action2);\r\n      }\r\n      this.setState({\r\n        selectedFoodItem: null,\r\n      });\r\n    } else {\r\n      dispatch(action);\r\n      // dispatch(action3);\r\n    }\r\n  }\r\n\r\n  handleAddingNewFoodItemToList = () => {\r\n    const { dispatch } = this.props;\r\n    const action = a.toggleForm();\r\n    dispatch(action);\r\n  }\r\n\r\n  handleChangingSelectedFoodItem = (id) => {\r\n    this.props.firestore.get({ collection: 'foodItems', doc: id }).then((foodItem) => {\r\n      const firestoreFoodItem = {\r\n        foodName: foodItem.get(\"foodName\"),\r\n        brand: foodItem.get(\"brand\"),\r\n        ingredients: foodItem.get(\"ingredients\"),\r\n        heartburn: foodItem.get(\"heartburn\"),\r\n        timeOpen: foodItem.get(\"timeOpen\"),\r\n        nanoseconds: foodItem.get(\"timeOpen.nanoseconds\"),\r\n        id: foodItem.id\r\n      }\r\n      this.setState({ selectedFoodItem: firestoreFoodItem });\r\n    });\r\n  }\r\n\r\n  handleDeletingFoodItem = (id) => {\r\n    this.props.firestore.delete({ collection: 'foodItems', doc: id });\r\n    this.setState({\r\n      selectedFoodItem: null\r\n    });\r\n  }\r\n\r\n  handleEditingFoodItemInList = () => {\r\n    const { dispatch } = this.props;\r\n    const action = a.editing();\r\n    dispatch(action);\r\n    this.setState({\r\n      selectedFoodItem: null\r\n    });\r\n  }\r\n\r\n  handleEditClick = () => {\r\n    console.log(\"handleEditClick reached!\");\r\n    const { dispatch } = this.props;\r\n    const action = a.editing();\r\n    dispatch(action);\r\n  }\r\n\r\n  render() {\r\n    // const auth = this.props.firebase.auth();\r\n    // if (!isLoaded(auth)) {\r\n    //   return (\r\n    //     <React.Fragment>\r\n    //       <h1>Loading...</h1>\r\n    //     </React.Fragment>\r\n    //   )\r\n    // }\r\n    // if ((isLoaded(auth)) && (auth.currentUser == null)) {\r\n    //   return (\r\n    //     <React.Fragment>\r\n    //       <h1>You must be signed in to access the queue.</h1>\r\n    //     </React.Fragment>\r\n    //   )\r\n    // }\r\n    // if ((isLoaded(auth)) && (auth.currentUser != null)) {\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if (this.props.editing) {\r\n      currentlyVisibleState = <EditFoodItemForm foodItem={this.state.selectedFoodItem} onEditFoodItem={this.handleEditingFoodItemInList} />\r\n      buttonText = \"Return to Food List\";\r\n    } else if (this.state.selectedFoodItem != null) {\r\n      currentlyVisibleState = <FoodItemDetail foodItem={this.state.selectedFoodItem} onClickingDelete={this.handleDeletingFoodItem} onClickingEdit={this.handleEditClick} />\r\n      buttonText = \"Return to Food List\";\r\n    } else if (this.props.formVisibleOnPage) {\r\n      currentlyVisibleState = <NewFoodItemForm onNewFoodItemCreation={this.handleAddingNewFoodItemToList} />;\r\n      buttonText = \"Return to Food List\";\r\n    } else {\r\n      currentlyVisibleState = <FoodItemList foodItemList={this.props.masterFoodItemList} onFoodItemSelection={this.handleChangingSelectedFoodItem} />;\r\n      buttonText = \"Add Food Item\";\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {currentlyVisibleState}\r\n        <br></br>\r\n        <button className=\"btn btn-info btn-sm\" onClick={this.handleClick}>{buttonText}</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n// }\r\nFoodItemControl.propTypes = {\r\n  masterFoodItemList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool,\r\n  editing: PropTypes.bool,\r\n  selectedFoodItem: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    masterFoodItemList: state.masterFoodItemList,\r\n    formVisibleOnPage: state.formVisibleOnPage,\r\n    editing: state.editing,\r\n    selectedFoodItem: state.selectedFoodItem\r\n  }\r\n}\r\n\r\nFoodItemControl = connect(mapStateToProps)(FoodItemControl);\r\n\r\nexport default withFirestore(FoodItemControl);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Header.js",["101","102","103"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport firebase from \"firebase/app\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n// import { Navbar } from 'react-bootstrap/Navbar'\r\n\r\nconst HeartburnHeader = styled.h1`\r\n  font-size: 32px;\r\n  // background-color: lightGray;\r\n  // text-align: center;\r\n  // margin-top: 20px;\r\n  padding: 36px 0px 16px 0px;\r\n  // border-radius: 20px;\r\n\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar className=\"nav-bar\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\" to=\"/\">My Heartburn Tracker</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/foodlist\" to=\"/foodlist\">Your Food List</Nav.Link>\r\n            <Nav.Link href=\"/yourstats\" to=\"/yourstats\">Your Stats</Nav.Link>\r\n          </Nav>\r\n          \r\n          \r\n          <Nav>\r\n            <Nav.Link href=\"/login\" to=\"/login\">Login</Nav.Link>\r\n            <Nav.Link href=\"/signup\" to=\"/signup\">\r\n              Sign up\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <br /><br />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signin.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\YourStats.js",["104","105","106","107"],"import React from 'react';\r\n// import FoodItem from \"./FoodItem\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction YourStats(props) {\r\n  useFirestoreConnect([\r\n    { collection: 'foodItems' }\r\n  ]);\r\n\r\n  const foodItems = useSelector(state => state.firestore.ordered.foodItems);\r\n  let heartburnItems;\r\n  let noHeartburnItems;\r\n  let arrays;\r\n  let heartburnArray;\r\n  let noHeartburnArray;\r\n  let count3;\r\n  let count4 = 0;\r\n  let array2;\r\n  let comparison;\r\n  let comparison2;\r\n\r\n  if (isLoaded(foodItems)) {\r\n    heartburnItems = foodItems.filter(f => f.heartburn == \"Yes\");\r\n    noHeartburnItems = foodItems.filter(f => f.heartburn == \"No\");\r\n    \r\n    arrays = [];\r\n    heartburnArray = [];\r\n    noHeartburnArray = [];\r\n\r\n    count3 = heartburnItems.length;\r\n\r\n    for (let i = 0; i < heartburnItems.length; i++) {\r\n      heartburnArray.push(heartburnItems[i].ingredients.split(\",\"));\r\n    }\r\n\r\n    for (let i = 0; i < noHeartburnItems.length; i++) {\r\n      noHeartburnArray.push(noHeartburnItems[i].ingredients.split(\",\"));\r\n    }\r\n    console.log(noHeartburnArray);\r\n\r\n  }\r\n  function LoopingMultipleArrays(array) {\r\n    array2 = [];\r\n    if (isLoaded(foodItems)) {\r\n      for (let i = 0; i <= array.length; i++) {\r\n        count3 = count3 - 1;\r\n        for (let j = 0; j < count3; j++) {\r\n          console.log(\"car\", count4);\r\n          if (count4 === array.length) {\r\n            count4 = array.length - 1;\r\n          } else {\r\n            count4++;\r\n          }\r\n          for (let k = 0; k < array[i].length; k++) {\r\n            console.log(\"count4\", count4);\r\n            if (count4 >= array.length) {\r\n              count4 = array.length - 1;\r\n            } else {\r\n              for (let e = 0; e < array[count4].length; e++) {\r\n                if (array[i][k] === array[count4][e]) {\r\n                  array2.push(array[i][k]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return array2;\r\n    }\r\n  }\r\n  LoopingMultipleArrays(heartburnArray);\r\n  if (isLoaded(foodItems)) {\r\n    comparison = [];\r\n  for (let e = 0; e < noHeartburnArray.length; e++) {\r\n    for(let i = 0; i < array2.length; i++) {\r\n      for (let j = 0; j < noHeartburnArray[e].length; j++) {\r\n        if (array2[i] === noHeartburnArray[e][j]) {\r\n          comparison.push(array2[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  comparison2 = [...new Set(comparison)];\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  function myFunction(item, index, arr) {\r\n    arr[index] = <li className=\"stats\"><strong>{item}</strong></li>;\r\n  }\r\n\r\n  function loadingFirestore(foodItems, array) {\r\n    if (isLoaded(foodItems)) {\r\n      array.forEach(myFunction);\r\n      // for (let i = 0; i < boom.length; i++) {\r\n      return array;\r\n      // }\r\n    } else {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <h2>Your stats</h2>\r\n      <p>Here are the food ingredients that may be causing your heartburn:</p>\r\n      {loadingFirestore(foodItems, array2)}\r\n      <br />\r\n      <p>Ingredients that are unlikely to give you heartburn on the list above:</p>\r\n      {/* {LoopingMultipleArrays(heartburnArray)} */}\r\n      {loadingFirestore(foodItems, comparison2)}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nYourStats.propTypes = {\r\n  onFoodItemSelection: PropTypes.func\r\n};\r\n\r\nexport default YourStats;","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signup.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Footer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\form-visible-reducer.js",["108"],"import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n  case c.TOGGLE_FORM:\r\n    return !state;\r\n  default:\r\n    return state;\r\n  }\r\n};","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\editing-reducer.js",["109"],"import * as c from '../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n    case c.EDITING:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  };\r\n}","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\foodItem-list-reducer.js",["110"],"import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { foodName, ingredients, heartburn, heartburn2, id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_FOODITEM:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          foodName: foodName,\r\n          ingredients: ingredients,\r\n          heartburn: heartburn,\r\n          heartburn2: heartburn2,\r\n          id: id,\r\n        }\r\n      });\r\n    case c.DELETE_FOODITEM:\r\n      const newState = { ...state };\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Homepage.js",["111","112","113","114","115","116","117","118"],"import React from 'react';\r\n// import FoodItem from \"./FoodItem\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Homepage(props) {\r\n  useFirestoreConnect([\r\n    { collection: 'foodItems' }\r\n  ]);\r\n\r\n  const foodItems = useSelector(state => state.firestore.ordered.foodItems);\r\n  let heartburnItems;\r\n  let arrays;\r\n  let matchedItems;\r\n  let matchItems;\r\n  let matchItems2;\r\n  let heartburnArray;\r\n  let count3;\r\n  let count4 = 0;\r\n  let array2;\r\n  if (isLoaded(foodItems)) {\r\n    heartburnItems = foodItems.filter(f => f.heartburn == \"Yes\");\r\n    arrays = [];\r\n    heartburnArray = [];\r\n    array2 = [];\r\n    count3 = heartburnItems.length;\r\n    for (let i = 0; i < heartburnItems.length; i++) {\r\n      heartburnArray.push(heartburnItems[i].ingredients.split(\",\"))\r\n    }\r\n    let matches;\r\n    function getMatch(a, b) {\r\n      matches = [];\r\n      for (let i = 0; i < a.length; i++) {\r\n        for (let e = 0; e < b.length; e++) {\r\n          if (a[i] === b[e]) matches.push(a[i]);\r\n        }\r\n      }\r\n      return matches;\r\n    }\r\n    let calculateCommonValues = (arrays) => {\r\n      return arrays.reduce((total, currentArray, index) => {\r\n        arrays.map((array, index2) => {\r\n          if (index <= index2) return total;\r\n          let combinedArrays = [...array, ...currentArray];\r\n          let uniqueValuesArray = new Set(combinedArrays);\r\n          let commonCount = combinedArrays.length - uniqueValuesArray.size;\r\n          if (combinedArrays.length - uniqueValuesArray.size > 0)\r\n            total[`array-${index2} array-${index}`] = commonCount;\r\n        });\r\n        return total;\r\n      }, {});\r\n    };\r\n    matchedItems = calculateCommonValues(heartburnArray);\r\n    matchItems = getMatch(heartburnArray[0], heartburnArray[2]);\r\n    matchItems2 = getMatch(heartburnArray[1], heartburnArray[2]);\r\n\r\n    for (let i = 0; i <= heartburnArray.length; i++) {\r\n      count3=count3 -1;\r\n      \r\n      for (let j = 0; j < count3; j++ ) {\r\n        console.log(\"car\", count4);\r\n        if (count4 === heartburnArray.length) {\r\n          count4 = heartburnArray.length -1;\r\n          \r\n        } else {\r\n          count4++;\r\n        }\r\n        \r\n        \r\n        // console.log(j);\r\n        for (let k = 0; k < heartburnArray[i].length; k++) {console.log(\"count4\", count4);\r\n          if(count4 >= heartburnArray.length) {\r\n            count4 = heartburnArray.length -1;\r\n          } else {\r\n          for (let e = 0; e < heartburnArray[count4].length; e++) {\r\n            // console.log(\"e\", heartburnArray[count4].length);\r\n            if (heartburnArray[i][k] === heartburnArray[count4][e]) {\r\n              array2.push(heartburnArray[i][k]);\r\n            }\r\n            // console.log(\"d\", count4);\r\n          }\r\n        }\r\n          // console.log(\"b\", count4);\r\n        }\r\n        // console.log(\"c\", count3);\r\n      }\r\n      // console.log(\"a\", array2);\r\n    }\r\n    console.log(\"j\", array2);\r\n  }\r\n  // let count = heartburnArray.length;\r\n  // let count2=0;\r\n  // let count3=0;\r\n  // let element;\r\n  // matchedItems = [];\r\n  // for (let i=0; i < count; i++) {\r\n  //   count--;\r\n  //   count2++;\r\n  //   console.log(\"count: \", count, count2);\r\n  //   for (let j=0; j < heartburnArray[i].length; j++) {\r\n  //     count3++;\r\n  //     element = heartburnArray[i].filter(input => input.includes(heartburnArray[i][j]));\r\n  //     console.log(element);\r\n  //     heartburnArray[count2].forEach(function(item) {\r\n  //       if (element.includes(item)) {\r\n  //         matchedItems.push(heartburnArray[i][j]);\r\n\r\n  //       }\r\n  //     })\r\n  //     console.log(count3);\r\n\r\n  // if (heartburnArray[i][j] === heartburnArray[i+1][j]) {\r\n  //   matchedItems.push(heartburnArray[1][j]);\r\n\r\n  // for (let k=0; k < heartburnArray[i].length-1; k++) {\r\n  //   if (heartburnArray[i][k] === heartburnArray[j][k]) {\r\n  //     matchedItems.push(heartburnArray[i][k]);\r\n  //   } else {\r\n  //     count++;\r\n  //   }\r\n  // console.log(count);\r\n  // }\r\n\r\n  // }\r\n\r\n  // }\r\n  // // console.log(heartburnArray[0].length, heartburnArray[1].length, heartburnArray[2].length);\r\n  // console.log(\"match\", matchedItems);\r\n\r\n  function myFunction(item, index, arr) {\r\n    arr[index] = item + \"<br />\";\r\n  }\r\n\r\n  // console.log(\"output\", heartburnItems[2].heartburn);\r\n  function loadingFirestore(foodItems) {\r\n    if (isLoaded(foodItems)) {\r\n      let boom = array2;\r\n      console.log(boom.forEach(myFunction));\r\n      // for (let i = 0; i < boom.length; i++) {\r\n        return boom;  \r\n      // }\r\n    } else {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <h2><strong>What if heartburn is caused by a specific ingredient or group of ingredients?</strong></h2>\r\n      <blockquote>\r\n        I had heartburn from a chocolate chip cookie made by a specific company, but when I had a chocolate chip cookie made by a different company, I did not get heartburn.<br /><br />\r\n        -- Jeff Dinsmore, Owner\r\n      </blockquote>\r\n      <p>It is our opinion that heartburn may be caused by a specific ingredient or group of ingredients rather than a type of food a person eats.</p>\r\n      {/* <h3><strong>Reducing heartburn starts with what you eat and what drink!</strong></h3>\r\n      <br /> */}\r\n      <br />\r\n      <h3>How do people have heartburn?</h3>\r\n      <p>Heartburn occurs when the lower esophageal sphincter relaxes and allows stomach fluids (stomach acid and food) back up into the esophagus.</p>\r\n      <br />\r\n      <h3>What triggers heartburn?</h3>\r\n      <p>Many doctors believe there are several foods that are listed to be risk factors in causing heartburn.</p>\r\n      <p>Some of these include:</p>\r\n      <ul>\r\n        <li className=\"list\">Spicy foods</li>\r\n        <li className=\"list\">Citrus foods</li>\r\n        <li className=\"list\">Onions</li>\r\n        <li className=\"list\">Tomatoes and tomato products</li>\r\n        <li className=\"list\">Fried foods</li>\r\n        <li className=\"list\">Alcohol</li>\r\n        <li className=\"list\">Coffee and some teas</li>\r\n        <li className=\"list\">Peppermint</li>\r\n      </ul>\r\n      <br />\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\nHomepage.propTypes = {\r\n  onFoodItemSelection: PropTypes.func\r\n};\r\n\r\nexport default Homepage;","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\NewFoodItemForm.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemList.js",["119","120"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditFoodItemForm.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemDetail.js",["121"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\ActionTypes.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\index.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItem.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":9,"column":25,"nodeType":"128","messageId":"129","endLine":9,"endColumn":33},{"ruleId":"126","severity":1,"message":"130","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"131","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":16},{"ruleId":"126","severity":1,"message":"132","line":9,"column":7,"nodeType":"128","messageId":"129","endLine":9,"endColumn":22},{"ruleId":"126","severity":1,"message":"133","line":4,"column":41,"nodeType":"128","messageId":"129","endLine":4,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":25,"column":56,"nodeType":"136","messageId":"137","endLine":25,"endColumn":58},{"ruleId":"134","severity":1,"message":"135","line":26,"column":58,"nodeType":"136","messageId":"137","endLine":26,"endColumn":60},{"ruleId":"126","severity":1,"message":"138","line":28,"column":5,"nodeType":"128","messageId":"129","endLine":28,"endColumn":11},{"ruleId":"139","severity":1,"message":"140","line":3,"column":1,"nodeType":"141","endLine":10,"endColumn":3},{"ruleId":"139","severity":1,"message":"140","line":3,"column":1,"nodeType":"141","endLine":10,"endColumn":2},{"ruleId":"139","severity":1,"message":"140","line":3,"column":1,"nodeType":"141","endLine":23,"endColumn":3},{"ruleId":"126","severity":1,"message":"133","line":4,"column":41,"nodeType":"128","messageId":"129","endLine":4,"endColumn":48},{"ruleId":"134","severity":1,"message":"135","line":23,"column":56,"nodeType":"136","messageId":"137","endLine":23,"endColumn":58},{"ruleId":"126","severity":1,"message":"138","line":24,"column":5,"nodeType":"128","messageId":"129","endLine":24,"endColumn":11},{"ruleId":"142","severity":1,"message":"143","line":43,"column":36,"nodeType":"144","messageId":"145","endLine":43,"endColumn":38},{"ruleId":"126","severity":1,"message":"146","line":54,"column":5,"nodeType":"128","messageId":"129","endLine":54,"endColumn":17},{"ruleId":"126","severity":1,"message":"147","line":55,"column":5,"nodeType":"128","messageId":"129","endLine":55,"endColumn":15},{"ruleId":"126","severity":1,"message":"148","line":56,"column":5,"nodeType":"128","messageId":"129","endLine":56,"endColumn":16},{"ruleId":"126","severity":1,"message":"149","line":136,"column":12,"nodeType":"128","messageId":"129","endLine":136,"endColumn":28},{"ruleId":"126","severity":1,"message":"133","line":5,"column":41,"nodeType":"128","messageId":"129","endLine":5,"endColumn":48},{"ruleId":"126","severity":1,"message":"150","line":21,"column":9,"nodeType":"128","messageId":"129","endLine":21,"endColumn":10},{"ruleId":"126","severity":1,"message":"150","line":12,"column":9,"nodeType":"128","messageId":"129","endLine":12,"endColumn":10},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'isLoaded' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'firebase' is defined but never used.","'HeartburnHeader' is assigned a value but never used.","'isEmpty' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'arrays' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'matchedItems' is assigned a value but never used.","'matchItems' is assigned a value but never used.","'matchItems2' is assigned a value but never used.","'loadingFirestore' is defined but never used.","'n' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]