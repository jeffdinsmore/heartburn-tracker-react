[{"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\index.js":"1","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reportWebVitals.js":"2","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\firebase.js":"3","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\App.js":"4","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\index.js":"5","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemControl.js":"6","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Header.js":"7","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signin.js":"8","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signup.js":"9","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Footer.js":"10","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\form-visible-reducer.js":"11","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\editing-reducer.js":"12","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\foodItem-list-reducer.js":"13","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Homepage.js":"14","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\NewFoodItemForm.js":"15","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemList.js":"16","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditFoodItemForm.js":"17","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemDetail.js":"18","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\ActionTypes.js":"19","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\index.js":"20","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItem.js":"21","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\ButtonCount.js":"22","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Modal.js":"23","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\show-modal-reducer.js":"24","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\YourStats.js":"25","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\select-foodItem-reducer.js":"26","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\homepage-visible-reducer.js":"27","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\sign-in-name-reducer.js":"28","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\login-visible-reducer.js":"29","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Routes.js":"30","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\PasswordReset.js":"31"},{"size":1277,"mtime":1632366513108,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":624,"mtime":1608229546155,"results":"35","hashOfConfig":"33"},{"size":1922,"mtime":1635918562652,"results":"36","hashOfConfig":"33"},{"size":930,"mtime":1635476792892,"results":"37","hashOfConfig":"33"},{"size":9153,"mtime":1635919512722,"results":"38","hashOfConfig":"33"},{"size":1495,"mtime":1636094457802,"results":"39","hashOfConfig":"33"},{"size":4069,"mtime":1635635783949,"results":"40","hashOfConfig":"33"},{"size":1195,"mtime":1635388751483,"results":"41","hashOfConfig":"33"},{"size":1721,"mtime":1635635735022,"results":"42","hashOfConfig":"33"},{"size":252,"mtime":1634000404237,"results":"43","hashOfConfig":"33"},{"size":246,"mtime":1634000304571,"results":"44","hashOfConfig":"33"},{"size":658,"mtime":1635138488469,"results":"45","hashOfConfig":"33"},{"size":2224,"mtime":1635918870832,"results":"46","hashOfConfig":"33"},{"size":1991,"mtime":1634972177709,"results":"47","hashOfConfig":"33"},{"size":2862,"mtime":1635578919589,"results":"48","hashOfConfig":"33"},{"size":2202,"mtime":1635297987517,"results":"49","hashOfConfig":"33"},{"size":1922,"mtime":1635463636354,"results":"50","hashOfConfig":"33"},{"size":629,"mtime":1635460062577,"results":"51","hashOfConfig":"33"},{"size":1599,"mtime":1635478855573,"results":"52","hashOfConfig":"33"},{"size":954,"mtime":1635210249360,"results":"53","hashOfConfig":"33"},{"size":530,"mtime":1635300797291,"results":"54","hashOfConfig":"33"},{"size":1309,"mtime":1635302276869,"results":"55","hashOfConfig":"33"},{"size":255,"mtime":1634632214566,"results":"56","hashOfConfig":"33"},{"size":10568,"mtime":1636094360961,"results":"57","hashOfConfig":"33"},{"size":823,"mtime":1635455575261,"results":"58","hashOfConfig":"33"},{"size":256,"mtime":1635447714217,"results":"59","hashOfConfig":"33"},{"size":1047,"mtime":1635478996881,"results":"60","hashOfConfig":"33"},{"size":264,"mtime":1635460030853,"results":"61","hashOfConfig":"33"},{"size":1037,"mtime":1635735125426,"results":"62","hashOfConfig":"33"},{"size":826,"mtime":1635317207503,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ibhg34",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\index.js",[],["136","137"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reportWebVitals.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\firebase.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\App.js",["138","139","140","141","142"],"import React from 'react';\nimport Header from './Header';\nimport FoodItemControl from './FoodItemControl';\nimport Homepage from './Homepage';\nimport YourStats from './YourStats';\nimport Footer from './Footer';\nimport Signin from \"./Signin\";\nimport Signup from './Signup';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport ButtonCount from './ButtonCount';\nimport { withFirestore, useFirestoreConnect, isLoaded } from 'react-redux-firebase';\nimport PropTypes from \"prop-types\";\nimport { useSelector } from 'react-redux';\nimport Routes from \"./Routes\";\n\nconst BodyStyling = styled.div`\n  // background-color: lightGray;\n  // text-align: center;\n  padding: 6px 0px 16px 0px;\n  padding-left: 10%;\n  padding-right: 10%;\n  // border-radius: 20px;\n`;\n\nfunction App(props) {\n  const auth = props.firebase.auth();\n  if ((isLoaded(auth)) && (auth.currentUser != null)) {\n  }\n  const state = useSelector(state => state);\n  console.log(\"props\", props, state)\n  return (\n    <Router>\n\n      <Header />\n      <Switch>\n        <Route path=\"/login\">\n          <BodyStyling>\n            <Signin />\n          </BodyStyling>\n        </Route>\n        <Route path=\"/signup\">\n          <BodyStyling>\n            <Signup />\n          </BodyStyling>\n        </Route>\n        <Route path=\"/yourstats\">\n          <BodyStyling>\n            <FoodItemControl />\n          </BodyStyling>\n        </Route>\n        <Route path=\"/foodlist\">\n          <BodyStyling>\n            <FoodItemControl />\n          </BodyStyling>\n        </Route>\n        <Route path=\"/buttoncount\">\n          <BodyStyling>\n            <ButtonCount />\n          </BodyStyling>\n        </Route>\n        <Route path=\"/\">\n          <BodyStyling>\n            <FoodItemControl />\n          </BodyStyling>\n        </Route>\n      </Switch>\n\n      <Footer />\n    </Router>\n  );\n}\n\nexport default withFirestore(App);\n","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\index.js",["143"],"import formVisibleReducer from './form-visible-reducer';\r\nimport foodItemListReducer from './foodItem-list-reducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport editingReducer from './editing-reducer';\r\nimport showModalReducer from './show-modal-reducer';\r\nimport selectFoodItemReducer from './select-foodItem-reducer';\r\nimport homepageVisibleReducer from './homepage-visible-reducer';\r\nimport signInNameReducer from './sign-in-name-reducer';\r\nimport loginVisibleReducer from './login-visible-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  formVisibleOnPage: formVisibleReducer,\r\n  masterFoodItemList: foodItemListReducer,\r\n  editing: editingReducer,\r\n  showModal: showModalReducer,\r\n  selectedFoodItem: selectFoodItemReducer,\r\n  loginName: signInNameReducer,\r\n  loginVisible: loginVisibleReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemControl.js",["144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, { useEffect } from 'react';\r\nimport NewFoodItemForm from './NewFoodItemForm';\r\nimport FoodItemList from './FoodItemList';\r\nimport FoodItemDetail from './FoodItemDetail';\r\nimport EditFoodItemForm from './EditFoodItemForm';\r\nimport Homepage from './Homepage';\r\n//import YourStats from './YourStats';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport * as a from './../actions';\r\nimport { withFirestore, useFirestoreConnect, isLoaded } from 'react-redux-firebase';\r\nimport firebase, { getAuth, onAuthStateChanged } from 'firebase';\r\n//import { propTypes } from 'react-bootstrap/esm/Image';\r\nimport { useSelector } from 'react-redux';\r\nimport Signin from './Signin';\r\nimport Header from './Header';\r\nimport Footer from './Footer'\r\nimport { createBrowserHistory } from 'history';\r\nimport YourStats from './YourStats';\r\n\r\n\r\nfunction FoodItemControl(props) {\r\n  useFirestoreConnect([\r\n    { collection: 'foodItems', orderBy: [['timeOpen', 'desc']] }\r\n  ]);\r\n  const history = createBrowserHistory();\r\n  // const firestore = useSelector(props => props.firestore)\r\n  const foodItems = useSelector(state => state.firestore.ordered.foodItems);\r\n  const editing = useSelector(state => state.editing)\r\n  //console.log(\"mast\", editing)\r\n  const showModal = useSelector(state => state.showModal);\r\n  const state = useSelector(state => state);\r\n  //const [ state, setState ] = useState({selectedFoodItem: null})\r\n  const formVisibleOnPage = useSelector(state => state.formVisibleOnPage);\r\n  const loginName = useSelector(state => state.signInName);\r\n  const loginVisible = useSelector(state => state.loginVisible)\r\n  //const isShowing = useSelector(state => state.showModal);\r\n  // const [state, setState] = useState({ selectedFoodItem: null });\r\n  // const [ selectedFoodItem, setSelectedFoodItem ] = useState(null);\r\n  const selectedFoodItem = useSelector(state => state.selectedFoodItem)\r\n  useEffect(() => {\r\n    console.log(\"component updated!\");\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      const { dispatch } = props;\r\n      //const action = a.signInName();\r\n      \r\n      if(user) {\r\n        console.log(\"fdfd\", user.email)\r\n        // if (signInName === \"Signed out\" || signInName === \"Not signed in\") {\r\n          dispatch(a.signInName(user.email));\r\n          console.log(\"s\", state)\r\n        }\r\n      // } else {\r\n  \r\n      \r\n    })\r\n  }, [])\r\n  \r\n  const handleClick = () => {\r\n    const { dispatch } = props;\r\n    const action = a.toggleForm();\r\n    const action2 = a.editing();\r\n    const action3 = a.unSelectFoodItem();\r\n    const action4 = a.togglefooditemlistShowing()\r\n    if(history.location.pathname === '/foodlist') {\r\n      history.push('/add-food-item')\r\n    } else {\r\n      history.push('/foodlist')\r\n    }\r\n    //history.push('/addfooditem')\r\n    //console.log(\"eeee\", editing, props)\r\n    if (selectedFoodItem != null) {\r\n      if (editing) {\r\n        dispatch(action2);\r\n      }\r\n      dispatch(action3);\r\n      //setSelectedFoodItem(null);\r\n      //setState({selectedFoodItem: null})\r\n      //console.log(\"ppp\", state, props, state.selectedFoodItem)\r\n    } else {\r\n      dispatch(action);\r\n      //console.log(\"jjj\", state.selectedFoodItem)\r\n      // dispatch(action3);\r\n    }\r\n  }\r\n\r\n  const handleShowingModal = () => {\r\n    const { dispatch } = props;\r\n    const action = a.showModal();\r\n    if (selectedFoodItem !== null) {\r\n      dispatch(action);\r\n      dispatch(a.signInName(\"sherry\"))\r\n    }\r\n  }\r\n\r\n  const handleCancelModal = () => {\r\n    const { dispatch } = props;\r\n    const action = a.showModal();\r\n    if (showModal) {\r\n      dispatch(action);\r\n      console.log(\"s\", state)\r\n    }\r\n  }\r\n\r\n  const handleAddingNewFoodItemToList = () => {\r\n    const { dispatch } = props;\r\n    const action = a.toggleForm();\r\n    dispatch(action);\r\n    history.push('/')\r\n  }\r\n\r\n  const handleChangingSelectedFoodItem = (id) => {\r\n    const { dispatch } = props;\r\n    //const action = a.selectFoodItem();\r\n    props.firestore.get({ collection: 'foodItems', doc: id }).then((foodItem) => {\r\n      const firestoreFoodItem = {\r\n        foodName: foodItem.get(\"foodName\"),\r\n        brand: foodItem.get(\"brand\"),\r\n        ingredients: foodItem.get(\"ingredients\"),\r\n        heartburn: foodItem.get(\"heartburn\"),\r\n        timeOpen: foodItem.get(\"timeOpen\"),\r\n        id: foodItem.id\r\n      }\r\n      dispatch(a.selectFoodItem(firestoreFoodItem))\r\n      // .foodName, firestoreFoodItem.brand, firestoreFoodItem.ingredients, firestoreFoodItem.heartburn, firestoreFoodItem.timeOpen, firestoreFoodItem.id))\r\n      // //setState({selectedFoodItem: firestoreFoodItem});\r\n    });\r\n    // setCount(count + 1);\r\n    //console.log(\"joey\")\r\n  }\r\n\r\n  const handleDeletingFoodItem = (id) => {\r\n    const { dispatch } = props;\r\n    const action = a.unSelectFoodItem();\r\n    const action2 = a.showModal();\r\n    props.firestore.delete({ collection: 'foodItems', doc: id });\r\n    dispatch(action);\r\n    dispatch(action2);\r\n    //setState({selectedFoodItem: null});\r\n  }\r\n\r\n\r\n\r\n  const handleEditingFoodItemInList = () => {\r\n    const { dispatch } = props;\r\n    const action = a.editing();\r\n    const action2 = a.unSelectFoodItem();\r\n    dispatch(action);\r\n    dispatch(action2);\r\n    //setState({selectedFoodItem:null});\r\n  }\r\n\r\n  const handleEditClick = () => {\r\n    console.log(\"handleEditClick reached!\");\r\n    const { dispatch } = props;\r\n    const action = a.editing();\r\n    dispatch(action);\r\n  }\r\n\r\n  const handleClickSignin = () => {\r\n    const { dispatch } = props;\r\n    const action = a.signInName;\r\n    if (loginName === \"Signed out\" || loginName === \"Not signed in\") {\r\n      dispatch(action);\r\n      console.log(\"s\", state)\r\n    }\r\n  }\r\n  // const auth = this.props.firebase.auth();\r\n  // if (!isLoaded(auth)) {\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //       <h1>Loading...</h1>\r\n  //     </React.Fragment>\r\n  //   )\r\n  // }\r\n  // if ((isLoaded(auth)) && (auth.currentUser == null)) {\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //       <h1>You must be signed in to access the queue.</h1>\r\n  //     </React.Fragment>\r\n  //   )\r\n  // }\r\n\r\n  console.log(\"mast1\", history, state, props)\r\n  let currentlyVisibleState = null;\r\n  let buttonText = null;\r\n  let buttonClass = \"btn btn-info btn-sm\";\r\n  const auth = props.firebase.auth();\r\n  // if ((isLoaded(auth)) && (auth.currentUser != null)) {\r\n      if (editing) {\r\n        currentlyVisibleState = <EditFoodItemForm foodItem={selectedFoodItem} onEditFoodItem={handleEditingFoodItemInList} />\r\n        buttonText = \"Return to Food List\";\r\n      } else if (selectedFoodItem != null) {\r\n        currentlyVisibleState = <FoodItemDetail foodItem={selectedFoodItem} onClickingDelete={handleDeletingFoodItem} onClickingModal={handleShowingModal} onClickingEdit={handleEditClick} onClickingCancel={handleCancelModal} showModal={showModal} />\r\n        buttonText = \"Return to Food List\";\r\n      // } else if (formVisibleOnPage) {\r\n      //   currentlyVisibleState = <NewFoodItemForm onNewFoodItemCreation={handleAddingNewFoodItemToList} />;\r\n      //   buttonText = \"Return to Food List\";\r\n      } else if(history.location.pathname === '/') {\r\n        currentlyVisibleState = <Homepage />;buttonText = \"Go To Your Food List\";\r\n      } else if(history.location.pathname === \"/add-food-item\") {\r\n        currentlyVisibleState = <NewFoodItemForm onNewFoodItemCreation={handleAddingNewFoodItemToList} />;\r\n        buttonText = \"Cancel\";\r\n        buttonClass = \"btn btn-secondary btn-sm\";\r\n      } else if(history.location.pathname === \"/yourstats\") {\r\n        currentlyVisibleState = <YourStats />\r\n        buttonText = \"See Food List\";\r\n      } else {\r\n        currentlyVisibleState = <FoodItemList foodItemList={foodItems} onFoodItemSelection={handleChangingSelectedFoodItem} />;\r\n        buttonText = \"Add Food Item\";\r\n      }\r\n      //console.log(\"state\", state, isShowing)\r\n    \r\n      return (\r\n        <React.Fragment>\r\n          {currentlyVisibleState}\r\n          <br></br>\r\n          <button className={buttonClass} onClick={handleClick}>{buttonText}</button>\r\n          {/* <Signin data={state} proppy={props} /> */}\r\n          {/* <Footer data={state} proppy={props} /> */}\r\n        </React.Fragment>\r\n      );\r\n    // } else {\r\n    //   return (\r\n    //     <React.Fragment>\r\n    //     {currentlyVisibleState}\r\n    //     <h3>Please sign in to access your pages</h3>\r\n    //     </React.Fragment>\r\n    //   )\r\n    // }\r\n\r\n}\r\n// }\r\nFoodItemControl.propTypes = {\r\n  masterFoodItemList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool,\r\n  editing: PropTypes.bool,\r\n  selectedFoodItem: PropTypes.object,\r\n  showModal: PropTypes.bool,\r\n  loginName: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  //console.log(\"state\", state)\r\n  return {\r\n    // masterFoodItemList: state.masterFoodItemList,\r\n    // formVisibleOnPage: state.formVisibleOnPage,\r\n    // editing: state.editing,\r\n    //selectedFoodItem: state.selectedFoodItem,\r\n    // isShowing: state.isShowing,\r\n  }\r\n}\r\n\r\nFoodItemControl = connect(mapStateToProps)(FoodItemControl);\r\n\r\nexport default withFirestore(FoodItemControl);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Header.js",["157"],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signin.js",["158","159","160","161","162","163","164","165","166","167"],"import React, { useEffect } from \"react\";\r\nimport firebase, { auth, signInWithEmailAndPassword, signInWithGoogle, GoogleAuthProvider } from \"firebase\";\r\nimport { Redirect, Route, useHistory } from \"react-router\";\r\nimport PropTypes from 'prop-types';\r\nimport * as a from './../actions';\r\nimport { useSelector } from 'react-redux';\r\nimport { withFirestore, useFirestoreConnect, isLoaded } from 'react-redux-firebase';\r\n\r\n\r\nfunction Signin(props) {\r\n  useFirestoreConnect([\r\n    { collection: 'foodItems', orderBy: [['timeOpen', 'desc']] }\r\n  ]);\r\n  const loginName = useSelector(state => state.loginName)\r\n  // useEffect(() => {\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     const { dispatch } = props;\r\n  //     //const action = a.signInName();\r\n      \r\n  //     if(user) {\r\n  //       console.log(\"fdfd\", user.email)\r\n  //       // if (loginName === \"Signed out\" || loginName === \"Not signed in\") {\r\n  //         dispatch(a.signInName(user.email));\r\n  //         console.log(\"s\", state)\r\n  //       }\r\n  //     // } else {\r\n  \r\n  //     //}\r\n  //   })\r\n  // }, [])\r\n\r\n  const history = useHistory();\r\n  //const loginName = useSelector(state => state.loginName.user)\r\n  const state = useSelector(state => state);\r\n  // const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  //const auth = getAuth();\r\n  console.log(\"pppf\", props, state)\r\n  const handleClickSignin = () => {\r\n    //const { dispatch } = props;\r\n    //const action = a.signInName;\r\n    // if (loginName === \"Signed out\" || loginName === \"Not signed in\") {\r\n      //dispatch(action);\r\n      console.log(\"s\", state)\r\n    //}\r\n  }\r\n\r\n  function doSignIn(event) {\r\n    event.preventDefault();\r\n    const email = event.target.signinEmail.value;\r\n    const password = event.target.signinPassword.value;\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then((userCredential) => {\r\n      console.log(\"Successfully signed in!\");\r\n      //handleClickSignin()\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 800);\r\n      \r\n      //const user = userCredential.user;\r\n    }).catch((error) => {\r\n      alert(error.message);\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n\r\n  // const signInWithGoogle = async () => {\r\n  //   try {\r\n  //     const res = await firebase.auth.signInWithPopup(googleProvider);\r\n  //     const user = res.user;\r\n  //     const query = await firebase.firestore()\r\n  //       .collection(\"users\")\r\n  //       .where(\"uid\", \"==\", user.uid)\r\n  //       .get();\r\n  //     if (query.docs.length === 0) {\r\n  //       await firebase.firestore().collection(\"users\").add({\r\n  //         uid: user.uid,\r\n  //         name: user.displayName,\r\n  //         authProvider: \"google\",\r\n  //         email: user.email,\r\n  //       });\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //     alert(err.message);\r\n  //   }\r\n  // };\r\n\r\n  function doSignOut() {\r\n    firebase.auth().signOut().then(function () {\r\n      alert(\"Successfully signed out!\");\r\n      console.log(\"Joey\");\r\n      return (<Redirect to=\"/\" />);\r\n    }).catch(function (error) {\r\n      alert(error.message);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Login</h2>\r\n      <br />\r\n      <form onSubmit={doSignIn}>\r\n        <input\r\n          type='text'\r\n          name='signinEmail'\r\n          placeholder='email' />&nbsp;&nbsp;&nbsp;\r\n        <input\r\n          type='password'\r\n          name='signinPassword'\r\n          placeholder='Password' />&nbsp;&nbsp;&nbsp;\r\n        <button className=\"btn btn-sm btn-success\" type='submit'>Login</button>\r\n      </form>\r\n      <br></br>\r\n      <p>Already signed in? Logout here:</p>\r\n\r\n      <button className=\"btn btn-info btn-sm\" onClick={doSignOut}>Logout</button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nSignin.propTypes = {\r\n  onSigningIn: PropTypes.func,\r\n  masterFoodItemList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool,\r\n  editing: PropTypes.bool,\r\n  selectedFoodItem: PropTypes.object,\r\n  showModal: PropTypes.bool,\r\n  loginName: PropTypes.string\r\n};\r\n\r\nexport default withFirestore(Signin);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Signup.js",["168","169","170"],"import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { getAuth, createUserWithEmailAndPassword, GoogleAuthProvider } from 'firebase';\r\n\r\nfunction Signup() {\r\n  //provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n  //const auth = getAuth();\r\n  function doSignUp(event) {\r\n    event.preventDefault();\r\n    const email = event.target.email.value;\r\n    const password = event.target.password.value;\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((userCredential) => {\r\n      alert(\"successfully signed up!\");\r\n      //const user = userCredential.user;\r\n    }).catch((error) => {\r\n      alert(error.message);\r\n    });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <h2>Sign up</h2>\r\n      <br />\r\n      <form onSubmit={doSignUp}>\r\n        <input\r\n          type='text'\r\n          name='email'\r\n          placeholder='email' />&nbsp;&nbsp;&nbsp;\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Password' />&nbsp;&nbsp;&nbsp;\r\n        <button className=\"btn btn-sm btn-success\" type='submit'>Sign up</button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Signup;","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Footer.js",["171","172","173","174","175"],"import React, { useEffect, useState } from 'react';\r\nimport { withFirestore, useFirestoreConnect, isLoaded } from 'react-redux-firebase';\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport * as a from './../actions';\r\n\r\nfunction Footer(props) {\r\n  const auth = props.firebase.auth();\r\n  const state = useSelector(state => state);\r\n  //const { dispatch } = props;\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      const { dispatch } = props;\r\n      //const action = a.signInName();\r\n      \r\n      if(user) {\r\n        console.log(\"fdfd\", user.email)\r\n        // if (loginName === \"Signed out\" || loginName === \"Not signed in\") {\r\n          dispatch(a.signInName(user.email));\r\n          console.log(\"s\", state)\r\n        }\r\n      // } else {\r\n  \r\n      //}\r\n    })\r\n  }, [])\r\n\r\n  const currentUser = useSelector(state => state.loginName.user)\r\n  const { data } = props;\r\n  console.log(\"footer\", state, props)\r\n  //const [ currentUser, setCurrentUser ] = useState(\"Not signed in\")\r\n  useEffect(() => {\r\n  if ((isLoaded(auth)) && (auth.currentUser != null)) {\r\n    //setCurrentUser(\"Signed in as:\" + auth.currentUser.email);\r\n    console.log(\"user\", currentUser)\r\n  }\r\n    //setCurrentUser(\"Signed in as:\");\r\n    console.log(\"component updated!\", currentUser);\r\n  }, [])\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"footer\">\r\n        <ul id=\"footerUl\">\r\n          <li id=\"footerLi\">{currentUser}</li>\r\n          <li id=\"footerLi\">Created by: Jeff Dinsmore</li>\r\n        </ul>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFooter.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default withFirestore(Footer);","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\form-visible-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\editing-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\foodItem-list-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Homepage.js",["176"],"import React from 'react';\r\n// import FoodItem from \"./FoodItem\";\r\nimport { useFirestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from \"prop-types\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nfunction Homepage(props) {\r\n  useFirestoreConnect([\r\n    { collection: 'foodItems', orderBy: [['timeOpen', 'desc']] }\r\n  ]);\r\n  const history = createBrowserHistory();\r\n\r\n\r\n  console.log(history, props)\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <br />\r\n      <h2><strong>What if heartburn is caused by a specific ingredient or group of ingredients?</strong></h2>\r\n      <blockquote>\r\n        I had heartburn from a chocolate chip cookie made by a specific company, but when I had a chocolate chip cookie made by a different company, I did not get heartburn.<br /><br />\r\n        -- Jeff Dinsmore, Owner\r\n      </blockquote>\r\n      <p>It is our opinion that heartburn may be caused by a specific ingredient or group of ingredients rather than a type of food a person eats.</p>\r\n      {/* <h3><strong>Reducing heartburn starts with what you eat and what drink!</strong></h3>\r\n      <br /> */}\r\n      <br />\r\n      <h3>How do people have heartburn?</h3>\r\n      <p>Heartburn occurs when the lower esophageal sphincter relaxes and allows stomach fluids (stomach acid and food) back up into the esophagus.</p>\r\n      <br />\r\n      <h3>What triggers heartburn?</h3>\r\n      <p>Many doctors believe there are several foods that are listed to be risk factors in causing heartburn.</p>\r\n      <p>Some of these include:</p>\r\n      <ul>\r\n        <li className=\"list\">Spicy foods</li>\r\n        <li className=\"list\">Citrus foods</li>\r\n        <li className=\"list\">Onions</li>\r\n        <li className=\"list\">Tomatoes and tomato products</li>\r\n        <li className=\"list\">Fried foods</li>\r\n        <li className=\"list\">Alcohol</li>\r\n        <li className=\"list\">Coffee and some teas</li>\r\n        <li className=\"list\">Peppermint</li>\r\n      </ul>\r\n      <br />\r\n\r\n      {/* <Nav.Link href=\"/foodlist\" to=\"/foodlist\">Go To Your Food List</Nav.Link> */}\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\nHomepage.propTypes = {\r\n  onFoodItemSelection: PropTypes.func\r\n};\r\n\r\nexport default Homepage;","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\NewFoodItemForm.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemList.js",["177"],"import React from \"react\";\r\nimport FoodItem from \"./FoodItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect, isLoaded, isEmpty } from 'react-redux-firebase';\r\n\r\nfunction FoodItemList(props) {\r\n  useFirestoreConnect([\r\n    { collection: 'foodItems', orderBy: ['timeOpen', 'desc'] }\r\n  ]);\r\n\r\n  const foodItems = useSelector(state => state.firestore.ordered.foodItems);\r\n\r\n  const convertDate = (date) => {\r\n    let month = date.toDateString().substring(7, 4);\r\n    let day = date.toDateString().substring(10, 8);\r\n    let year = date.toDateString().substring(15, 11);\r\n    let n = date.toDateString().substring(15, 3);\r\n    return month + \"-\" + day + \"-\" + year;\r\n  }\r\n\r\n  if (!isLoaded(foodItems)) {\r\n    return (\r\n      <React.Fragment>\r\n        <h3>Loading...</h3>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  if (isLoaded(foodItems)) {\r\n    console.log(\"list\", props, foodItems)\r\n    let mapFoodItems = foodItems.map((foodItem) => {\r\n      let date = foodItem.timeOpen === null ? new Date() : new Date((foodItem.timeOpen.nanoseconds / 1000000) + (foodItem.timeOpen.seconds * 1000));\r\n      return <FoodItemList\r\n        // whenFoodItemClicked={props.onFoodItemSelection}\r\n        foodName={foodItem.foodName}\r\n        ingredients={foodItem.ingredients}\r\n        heartburn={foodItem.heartburn}\r\n        timeOpen={date}\r\n        id={foodItem.id}\r\n        key={foodItem.id} />\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Your Recorded Food List</h2>\r\n        <table className=\"Table-mobile-large\">\r\n          <tbody>\r\n            <tr className=\"tableHeader\">\r\n              <th className=\"headerName\">Food Item</th>\r\n              <th className=\"headerIngredients\">Ingredients</th>\r\n              <th className=\"headerHeartburn\">Heartburn</th>\r\n              <th className=\"headerDate\">Date Opened</th>\r\n              <th className=\"headerDetails\">Details</th>\r\n            </tr>\r\n\r\n            {mapFoodItems.map((foodItem) => {\r\n              //console.log(\"hey\", foodItem.props.timeOpen);\r\n              return <FoodItem\r\n                whenFoodItemClicked={props.onFoodItemSelection}\r\n                foodName={foodItem.props.foodName}\r\n                ingredients={foodItem.props.ingredients}\r\n                heartburn={foodItem.props.heartburn}\r\n                timeOpen={convertDate(foodItem.props.timeOpen)}\r\n                id={foodItem.props.id}\r\n                key={foodItem.props.id} />\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <hr />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  if (isEmpty(foodItems)) {\r\n    return (\r\n      <React.Fragment><span>No food items have been entered in your list.</span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nFoodItemList.propTypes = {\r\n  onFoodItemSelection: PropTypes.func\r\n};\r\n\r\nexport default FoodItemList;\r\n","C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\EditFoodItemForm.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItemDetail.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\ActionTypes.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\actions\\index.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\FoodItem.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\ButtonCount.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Modal.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\show-modal-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\YourStats.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\select-foodItem-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\homepage-visible-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\sign-in-name-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\reducers\\login-visible-reducer.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\Routes.js",[],"C:\\users\\Jeffrey\\documents\\epicodus\\react\\heartburn-tracker\\src\\components\\PasswordReset.js",["178","179"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase/app\";\r\n\r\n// function PasswordReset() {\r\n\r\n//   function doPasswordReset(event) {\r\n//     event.preventDefault();\r\n//     const email = event.target.signinEmail.value;\r\n//     const password = event.target.signinPassword.value;\r\n//     firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\r\n//       alert(\"Successfully signed in!\");\r\n//     }).catch(function (error) {\r\n//       alert(error.message);\r\n//     });\r\n//   }\r\n// }\r\n\r\nconst sendPasswordResetEmail = async (email) => {\r\n  try {\r\n    await firebase.auth.sendPasswordResetEmail(email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nexport default sendPasswordResetEmail;",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":16},{"ruleId":"184","severity":1,"message":"188","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":17},{"ruleId":"184","severity":1,"message":"189","line":12,"column":25,"nodeType":"186","messageId":"187","endLine":12,"endColumn":44},{"ruleId":"184","severity":1,"message":"190","line":13,"column":8,"nodeType":"186","messageId":"187","endLine":13,"endColumn":17},{"ruleId":"184","severity":1,"message":"191","line":15,"column":8,"nodeType":"186","messageId":"187","endLine":15,"endColumn":14},{"ruleId":"184","severity":1,"message":"192","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":30},{"ruleId":"184","severity":1,"message":"193","line":11,"column":46,"nodeType":"186","messageId":"187","endLine":11,"endColumn":54},{"ruleId":"184","severity":1,"message":"194","line":12,"column":20,"nodeType":"186","messageId":"187","endLine":12,"endColumn":27},{"ruleId":"184","severity":1,"message":"195","line":12,"column":29,"nodeType":"186","messageId":"187","endLine":12,"endColumn":47},{"ruleId":"184","severity":1,"message":"196","line":15,"column":8,"nodeType":"186","messageId":"187","endLine":15,"endColumn":14},{"ruleId":"184","severity":1,"message":"197","line":16,"column":8,"nodeType":"186","messageId":"187","endLine":16,"endColumn":14},{"ruleId":"184","severity":1,"message":"198","line":17,"column":8,"nodeType":"186","messageId":"187","endLine":17,"endColumn":14},{"ruleId":"184","severity":1,"message":"199","line":34,"column":9,"nodeType":"186","messageId":"187","endLine":34,"endColumn":26},{"ruleId":"184","severity":1,"message":"200","line":36,"column":9,"nodeType":"186","messageId":"187","endLine":36,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":60,"column":6,"nodeType":"203","endLine":60,"endColumn":8,"suggestions":"204"},{"ruleId":"184","severity":1,"message":"205","line":67,"column":11,"nodeType":"186","messageId":"187","endLine":67,"endColumn":18},{"ruleId":"184","severity":1,"message":"206","line":163,"column":9,"nodeType":"186","messageId":"187","endLine":163,"endColumn":26},{"ruleId":"184","severity":1,"message":"207","line":191,"column":9,"nodeType":"186","messageId":"187","endLine":191,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":257,"column":1,"nodeType":"186","messageId":"210","endLine":257,"endColumn":16},{"ruleId":"184","severity":1,"message":"211","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"212","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"213","line":2,"column":20,"nodeType":"186","messageId":"187","endLine":2,"endColumn":24},{"ruleId":"184","severity":1,"message":"214","line":2,"column":26,"nodeType":"186","messageId":"187","endLine":2,"endColumn":52},{"ruleId":"184","severity":1,"message":"215","line":2,"column":54,"nodeType":"186","messageId":"187","endLine":2,"endColumn":70},{"ruleId":"184","severity":1,"message":"216","line":2,"column":72,"nodeType":"186","messageId":"187","endLine":2,"endColumn":90},{"ruleId":"184","severity":1,"message":"217","line":3,"column":20,"nodeType":"186","messageId":"187","endLine":3,"endColumn":25},{"ruleId":"184","severity":1,"message":"218","line":5,"column":13,"nodeType":"186","messageId":"187","endLine":5,"endColumn":14},{"ruleId":"184","severity":1,"message":"193","line":7,"column":46,"nodeType":"186","messageId":"187","endLine":7,"endColumn":54},{"ruleId":"184","severity":1,"message":"219","line":14,"column":9,"nodeType":"186","messageId":"187","endLine":14,"endColumn":18},{"ruleId":"184","severity":1,"message":"206","line":38,"column":9,"nodeType":"186","messageId":"187","endLine":38,"endColumn":26},{"ruleId":"184","severity":1,"message":"194","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":17},{"ruleId":"184","severity":1,"message":"220","line":3,"column":19,"nodeType":"186","messageId":"187","endLine":3,"endColumn":49},{"ruleId":"184","severity":1,"message":"216","line":3,"column":51,"nodeType":"186","messageId":"187","endLine":3,"endColumn":69},{"ruleId":"184","severity":1,"message":"221","line":1,"column":28,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"189","line":2,"column":25,"nodeType":"186","messageId":"187","endLine":2,"endColumn":44},{"ruleId":"201","severity":1,"message":"202","line":27,"column":6,"nodeType":"203","endLine":27,"endColumn":8,"suggestions":"222"},{"ruleId":"184","severity":1,"message":"223","line":30,"column":11,"nodeType":"186","messageId":"187","endLine":30,"endColumn":15},{"ruleId":"201","severity":1,"message":"224","line":40,"column":6,"nodeType":"203","endLine":40,"endColumn":8,"suggestions":"225"},{"ruleId":"184","severity":1,"message":"226","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":11},{"ruleId":"184","severity":1,"message":"227","line":18,"column":9,"nodeType":"186","messageId":"187","endLine":18,"endColumn":10},{"ruleId":"184","severity":1,"message":"228","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"190","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":17},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'YourStats' is defined but never used.","'useFirestoreConnect' is defined but never used.","'PropTypes' is defined but never used.","'Routes' is defined but never used.","'homepageVisibleReducer' is defined but never used.","'isLoaded' is defined but never used.","'getAuth' is defined but never used.","'onAuthStateChanged' is defined but never used.","'Signin' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'formVisibleOnPage' is assigned a value but never used.","'loginVisible' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'state'. Either include them or remove the dependency array.","ArrayExpression",["231"],"'action4' is assigned a value but never used.","'handleClickSignin' is assigned a value but never used.","'auth' is assigned a value but never used.","no-func-assign","'FoodItemControl' is a function.","isAFunction","'styled' is defined but never used.","'useEffect' is defined but never used.","'auth' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'signInWithGoogle' is defined but never used.","'GoogleAuthProvider' is defined but never used.","'Route' is defined but never used.","'a' is defined but never used.","'loginName' is assigned a value but never used.","'createUserWithEmailAndPassword' is defined but never used.","'useState' is defined but never used.",["232"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth' and 'currentUser'. Either include them or remove the dependency array.",["233"],"'Nav' is defined but never used.","'n' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [props, state]",{"range":"239","text":"240"},{"range":"241","text":"240"},"Update the dependencies array to be: [auth, currentUser]",{"range":"242","text":"243"},[2431,2433],"[props, state]",[870,872],[1364,1366],"[auth, currentUser]"]